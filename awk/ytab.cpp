/* original parser id follows */
/* yysccsid[] = "@(#)yaccpar	1.9 (Berkeley) 02/21/93" */
/* (use YYMAJOR/YYMINOR for ifdefs dependent on parser version) */

#define YYBYACC 1
#define YYMAJOR 1
#define YYMINOR 9

#define YYEMPTY        (-1)
#define yyclearin      (yychar = YYEMPTY)
#define yyerrok        (yyerrflag = 0)
#define YYRECOVERING() (yyerrflag != 0)
#define YYENOMEM       (-2)
#define YYEOF          0
#define YYPREFIX "yy"

#define YYPURE 0

#line 26 "awkgram.y"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "awk.h"

void checkdup(Node *list, Cell *item);
void yyinit (void);
void yyend (void);

Node    *beginloc;
Node    *endloc;
Node    *winner;
int     infunc;         /* = 1 if in arglist or body of func */
int     inloop;         /* = 1 if in while, for, do */
char    *curfname;      /* current function name */
Node    *arglist;       /* list of args for current function */
char*   lexbuf;         /* buffer for lexical analyzer */
size_t  lexbuf_sz;      /* size of lex buffer */

#ifdef YYSTYPE
#undef  YYSTYPE_IS_DECLARED
#define YYSTYPE_IS_DECLARED 1
#endif
#ifndef YYSTYPE_IS_DECLARED
#define YYSTYPE_IS_DECLARED 1
#line 47 "awkgram.y"
typedef union {
    Node    *p;
    Cell    *cp;
    int     i;
    char    *s;
} YYSTYPE;
#endif /* !YYSTYPE_IS_DECLARED */
#line 54 "ytab.cpp"

/* compatibility with bison */
#ifdef YYPARSE_PARAM
/* compatibility with FreeBSD */
# ifdef YYPARSE_PARAM_TYPE
#  define YYPARSE_DECL() yyparse(YYPARSE_PARAM_TYPE YYPARSE_PARAM)
# else
#  define YYPARSE_DECL() yyparse(void *YYPARSE_PARAM)
# endif
#else
# define YYPARSE_DECL() yyparse(void)
#endif

/* Parameters sent to lex. */
#ifdef YYLEX_PARAM
# define YYLEX_DECL() yylex(void *YYLEX_PARAM)
# define YYLEX yylex(YYLEX_PARAM)
#else
# define YYLEX_DECL() yylex(void)
# define YYLEX yylex()
#endif

#if !(defined(yylex) || defined(YYSTATE))
int YYLEX_DECL();
#endif

/* Parameters sent to yyerror. */
#ifndef YYERROR_DECL
#define YYERROR_DECL() yyerror(const char *s)
#endif
#ifndef YYERROR_CALL
#define YYERROR_CALL(msg) yyerror(msg)
#endif

extern int YYPARSE_DECL();

#define FIRSTTOKEN 257
#define PROGRAM 258
#define PASTAT 259
#define PASTAT2 260
#define XBEGIN 261
#define XEND 262
#define NL 263
#define ARRAY 264
#define MATCH 265
#define NOTMATCH 266
#define MATCHOP 267
#define FINAL 268
#define DOT 269
#define ALL 270
#define CCL 271
#define NCCL 272
#define CHAR 273
#define OR 274
#define STAR 275
#define QUEST 276
#define PLUS 277
#define EMPTYRE 278
#define AND 279
#define BOR 280
#define APPEND 281
#define EQ 282
#define GE 283
#define GT 284
#define LE 285
#define LT 286
#define NE 287
#define IN 288
#define ARG 289
#define BLTIN 290
#define BREAK 291
#define CLOSE 292
#define CONTINUE 293
#define DELETE 294
#define DO 295
#define EXIT 296
#define FOR 297
#define FUNC 298
#define SUB 299
#define GSUB 300
#define IF 301
#define INDEX 302
#define LSUBSTR 303
#define MATCHFCN 304
#define NEXT 305
#define NEXTFILE 306
#define ADD 307
#define MINUS 308
#define MULT 309
#define DIVIDE 310
#define MOD 311
#define ASSIGN 312
#define ASGNOP 313
#define ADDEQ 314
#define SUBEQ 315
#define MULTEQ 316
#define DIVEQ 317
#define MODEQ 318
#define POWEQ 319
#define PRINT 320
#define PRINTF 321
#define SPRINTF 322
#define ELSE 323
#define INTEST 324
#define CONDEXPR 325
#define POSTINCR 326
#define PREINCR 327
#define POSTDECR 328
#define PREDECR 329
#define VAR 330
#define IVAR 331
#define VARNF 332
#define CALL 333
#define NUMBER 334
#define STRING 335
#define REGEXPR 336
#define GETLINE 337
#define RETURN 338
#define SPLIT 339
#define SUBSTR 340
#define WHILE 341
#define CAT 342
#define NOT 343
#define UMINUS 344
#define UPLUS 345
#define POWER 346
#define DECR 347
#define INCR 348
#define INDIRECT 349
#define LASTTOKEN 350
#define YYERRCODE 256
typedef short YYINT;
static const YYINT yylhs[] = {                           -1,
    0,    0,   36,   36,   37,   37,   33,   33,   26,   26,
   24,   24,   40,   22,   41,   22,   42,   22,   20,   20,
   23,   30,   30,   34,   34,   35,   35,   29,   29,   15,
   15,    1,    1,   10,   11,   11,   11,   11,   11,   11,
   11,   43,   11,   12,   12,    6,    6,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    4,    4,    5,
    5,    7,    7,    7,   39,   39,   28,   28,   28,   28,
   31,   31,    9,    9,   44,   13,   32,   32,   14,   14,
   14,   14,   14,   14,   14,   14,   27,   27,   16,   16,
   45,   46,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   47,   16,   16,   17,   17,   38,
   38,    8,    8,    8,    8,    8,    8,    8,    8,    8,
    8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
    8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
    8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
    8,    8,    8,   18,   18,   18,   18,   21,   21,   21,
   19,   19,   19,   25,
};
static const YYINT yylen[] = {                            2,
    1,    1,    1,    2,    1,    2,    1,    2,    1,    2,
    1,    2,    0,   12,    0,   10,    0,    8,    1,    1,
    4,    1,    2,    1,    2,    0,    1,    0,    1,    0,
    1,    1,    3,    1,    1,    4,    4,    7,    3,    4,
    4,    0,    9,    1,    3,    1,    3,    3,    5,    3,
    3,    3,    3,    3,    5,    2,    1,    1,    3,    5,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    5,    4,    3,    2,    1,    1,    3,    3,    1,
    3,    0,    1,    3,    1,    1,    1,    1,    2,    2,
    1,    2,    1,    2,    0,    4,    1,    2,    4,    4,
    4,    2,    5,    2,    1,    1,    1,    2,    2,    2,
    0,    0,    9,    3,    2,    1,    4,    2,    3,    2,
    2,    3,    2,    2,    0,    3,    2,    1,    2,    1,
    1,    4,    3,    3,    3,    3,    3,    3,    2,    2,
    2,    3,    4,    1,    3,    4,    2,    2,    2,    2,
    2,    4,    3,    2,    1,    6,    6,    3,    6,    6,
    1,    8,    8,    6,    4,    1,    6,    6,    8,    8,
    8,    6,    1,    1,    4,    1,    2,    0,    1,    3,
    1,    1,    1,    4,
};
static const YYINT yydefred[] = {                         0,
    2,   87,   88,    0,    1,    0,    0,   89,   90,    0,
    0,   22,    0,   95,  182,    0,    0,    0,  130,  131,
    0,    0,    0,  181,  176,  183,    0,  161,  166,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   76,    0,   44,    0,   93,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   19,
   20,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   94,  148,  149,  177,    0,    0,    3,
    5,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  150,  151,    0,  106,   23,    0,    0,    0,
    0,    9,    0,    0,    0,    0,    0,   85,   86,    0,
    0,    0,    0,  128,    0,  116,    0,  125,    0,    0,
    0,    0,    0,    0,    7,  158,    0,    0,    0,    0,
  142,    0,    0,    0,    0,    0,    0,    0,  145,    0,
    0,    0,    0,    0,    0,    0,   69,    0,    0,    0,
    0,    0,    0,   71,    0,    4,    0,    6,    0,    0,
    0,    0,    0,    0,    0,    0,   24,    0,    0,    0,
   45,    0,    0,  127,    0,  109,    0,  110,    0,    0,
  115,    0,    0,  120,  121,    0,  123,    0,  124,   39,
  129,    0,    0,   10,    0,    0,    0,    0,    0,    0,
    0,   57,    0,    0,    0,   40,   41,    8,    0,    0,
    0,   96,  143,    0,  179,    0,    0,    0,  165,  146,
    0,    0,    0,   73,    0,    0,   25,    0,   36,  175,
  108,    0,  114,   31,    0,    0,    0,  122,    0,   11,
    0,  126,  112,   91,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   72,
    0,   97,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   12,  117,    0,
   92,    0,    0,    0,   52,   54,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   98,    0,  180,  156,
  157,  160,  159,  164,    0,  172,    0,    0,  103,    0,
    0,    0,    0,    0,    0,    0,  168,    0,  167,    0,
    0,    0,    0,    0,   38,    0,    0,    0,    0,   55,
    0,    0,    0,    0,    0,  162,  163,  171,    0,    0,
    0,    0,  170,  169,   43,    0,    0,   18,    0,    0,
    0,  113,   16,    0,    0,   14,
};
static const YYINT yydgoto[] = {                          4,
    5,  122,  208,   53,  209,  143,  210,   40,   41,   42,
   43,   44,   45,  123,  245,  124,  125,   46,   47,   62,
  226,  126,  127,  251,  128,  129,  186,    6,    7,  130,
  255,  273,  224,  187,  179,   91,   92,   49,  131,  365,
  360,  351,  308,   54,  205,  290,  203,
};
static const YYINT yysindex[] = {                       -56,
    0,    0,    0,    0,    0,  -45, 8073,    0,    0, -100,
 -100,    0, 8912,    0,    0,  -15, 9236, -176,    0,    0,
    9,   15,   17,    0,    0,    0,   22,    0,    0,  216,
   27,   35, 9236, 9236, 8964, -169, -169, 9236, 7579,  -37,
    0,  -23,    0,  -33,    0, -234,  -59, 4562,   37, 4562,
 4562, 6204,  124, -254, 8339, 8912, 9236,  -37, -125,    0,
    0,   61, 8912, 8912, 8912, 8391, 9236, -197, 8912, 8912,
 -243, -243, -243,    0,    0,    0,    0, -222, 8912,    0,
    0, 8912, 8912, 8912, 8912, 8912, 8912, -143, 8912,  -37,
 8466, 8527, 9016, 9236, 9236, 9236, 9236, 9236, -118, 4562,
 8073, 8912,    0,    0, 8912,    0,    0, -118,  -31,  -31,
 -143,    0, 8262,  110,  119,  -31,  -31,    0,    0, 8262,
  126, 7579,  -31,    0, 4625,    0, 5532,    0,  -96, 4562,
 9098, 8912, 4692, 4753,    0,    0, 8579, -117, 8579,  130,
    0, 7579,  131, 6705, -140, 6790, 6790,  153,    0,  175,
  -37, 9236, 6790, 6790, -169, 2168,    0, 2168, 2168, 2168,
 2168, 2168, 2168,    0, 6876,    0, 7937,    0, 4830, 9236,
 -243,  -35,  -35, -243, -243, -243,    0,  -65, 8912, 4892,
    0, 7579,   -7,    0, -118,    0,  -65,    0,  113, 6335,
    0, 8125, 8912,    0,    0, 6335,    0, 8912,    0,    0,
    0,  -90, 5532,    0, 5532, 5020, 8912, 8200,  190,  -72,
  -37,    0, -174, 6790,  190,    0,    0,    0, 7579, -143,
 7579,    0,    0, 8579,    0,  176, 8579, 8579,    0,    0,
  -37, -192, 8579,    0, 8912,  -37,    0, -100,    0,    0,
    0, 8912,    0,    0,  181,  -87, 6971,    0, 6971,    0,
 5081,    0,    0,    0,  -11,  209, 9160, -143, 9160,  -37,
 8654, 8706, 8785, 9236, 9236, 9236, 9160, 8579, 8579,    0,
 7579,    0,   -3, -194, 7063,  220, 7141,  229,  213, 6432,
 7579, 4562,   49,  -25, -143,   -3,   -3,    0,    0,  -69,
    0,   16, 8912, 2168,    0,    0, 8011, 8847, 1264, 8200,
  -37,  -37,  -37, 8200, 6517, 6618,    0, -100,    0,    0,
    0,    0,    0,    0, 8579,    0, 8579, 5204,    0, -118,
 8912,  257,  266, -143,  251, 9160,    0, -202,    0, -202,
 4562, 7236,  271, 7328,    0, 8125, 7406,   -3, 8912,    0,
   16, 8200,  276,  277, 5348,    0,    0,    0,  257, -118,
 5532, 7501,    0,    0,    0,   -3, 8125,    0,  -31, 5532,
  257,    0,    0,   -3, 5532,    0,
};
static const YYINT yyrindex[] = {                      2901,
    0,    0,    0,    0,    0, 2995,  322,    0,    0,    0,
    0,    0,    0,    0,    0,   90,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 3261,
    0,    0,    0,    0,    0,    0,    0,    0,  192, 2636,
    0, 2782,    0, 2901,    0, 1675,    1,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 2029, 1581,    0,
    0,    0,    0,    0,    0,    0,    0,  184,    0,    0,
  498,  587,  681,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 2730,
    0,    0,    0,    0,    0,    0,    0,    0, 9184,    0,
  328,    0,    0,    0,    0,    0,    0, 4295,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  -28,    0,    0,    0,    0,    0,    0, 5618,    0,
   82,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  -17,    0,    0,  269,    0,    0,    0,    0,    0,
 2282,    0,    0,    0, 3349,   63,    0,  152,  560,  649,
 1057, 1146, 1987,    0,    0,    0, 3758,    0, 1996,    0,
  995, 1846, 1940, 1084, 1178, 1492,    0, 4234,    0,    0,
    0,   58,    0,    0, 4295,    0, 4356,    0,  -19,    0,
    0,  270,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 5443,    0,    0,    0,    0,    0,  485,  376,   -8,
 7758,    0, 4173,    0, 7671,    0,    0,    0,  314,    0,
  318,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 2371,    0,    0,    0,    0, 2465,    0, 2834,    0,    0,
    0,    0,    0,    0,    0, 3167,    0,    0,    0,    0,
    0,    0,    0,    0, 4424,    0,    0,    0,    0, 7845,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   67,    0,  214,    0,    0, 7671,    0, 7671,    0,    0,
  144,    0,    0, 9184,    0, 5712, 5802,    0,    0,    0,
    0,  385,    0,  215,    0,    0,    0,  675,  712,  768,
    6,   33,   39,   -5,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 1409,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 7671,    0,    0,  305,    0, 5931,    0,    0,
    0,  617,    0,    0,    0,    0,    0,    0,    0, 1409,
    0,    0,    0,    0,    0, 6025,  305,    0,    0,    0,
    0,    0,    0, 6115,    0,    0,
};
static const YYINT yygindex[] = {                         0,
    0, 4120,  353, -198,    0,    7,    0, 3845,  134,  185,
  253,    0,  -49, -181, -301, 1557,  -34, 3628,  293,    0,
    0,    0,    0,    0,    0,    0,  -32,    0,  321,    8,
    0, -179,  357,  -79,   10,  299,  373,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,
};
#define YYTABLESIZE 9585
static const YYINT yytable[] = {                         97,
  174,   97,    3,  105,   96,   94,   96,   95,  256,   93,
  244,   93,  105,    9,   48,  133,  134,   50,   51,  178,
   99,  104,   12,   46,   55,    3,   46,  185,  178,  157,
  105,  105,  102,  320,  349,   48,  135,  174,   48,  104,
  174,  174,  174,  174,  174,  174,   99,  174,   63,  100,
  102,  264,   48,   48,   64,  361,   65,   59,  174,  174,
  218,   66,   70,  174,   99,  180,   69,  286,  218,  287,
  218,  148,  150,  100,   70,   46,  132,  188,  102,  101,
  191,  140,  215,  194,  195,  240,   15,  197,  152,  144,
  199,  100,  135,  174,  325,  206,   15,  101,   59,   12,
  145,   59,   98,   70,   59,  178,   70,   47,   48,   70,
   47,  183,  103,  104,  155,   59,   59,  184,   48,   15,
   70,   70,   82,  174,  174,   70,  144,   24,   25,   26,
  144,  144,  144,  144,  144,  309,  144,   24,  267,   26,
   82,  319,  338,   60,  177,   15,   38,  144,  144,  192,
   59,   63,  144,   60,  244,   70,   61,  243,  193,   47,
   24,   25,   26,  248,  138,  198,  204,  135,   74,  356,
  220,  223,  103,  104,  135,  244,  222,  276,  278,   38,
   59,  364,  144,  154,   60,   70,   24,   60,   26,  225,
   60,   34,   63,  229,  241,   63,  135,  237,   63,    1,
  285,   60,   60,  242,  178,   82,    2,  295,  265,   63,
   63,  266,  144,  144,   63,  230,  272,    8,  135,  135,
  154,  103,  104,  154,  154,  154,  154,  154,  154,    2,
  154,  177,  250,  135,  105,   34,   60,  177,   34,  284,
  178,  154,  154,  104,   63,  282,  154,  318,  283,  292,
   34,  291,  135,  314,  102,   53,  135,   48,   53,  307,
  311,  174,  174,  174,  212,  333,   60,  174,   99,  313,
  178,  323,   53,   53,   63,   48,  154,   53,   48,  174,
  174,  174,  174,  174,  174,  174,  174,  174,  174,  174,
  174,  341,  174,  321,  135,  100,  345,  272,  174,  174,
  174,  101,  174,  324,  174,  339,  154,  154,   98,  178,
   98,  347,  178,  174,   34,  331,  353,  354,   59,   59,
   59,   32,  174,   70,   70,   70,  362,   33,   30,  336,
  174,  174,  174,  174,  174,  174,   42,  174,   53,  174,
  174,   70,   70,  174,   82,   30,  174,  174,  174,  174,
  144,  144,  144,  181,   78,   59,  144,   78,   79,  357,
   70,   79,   82,  238,  101,   82,    0,    0,  144,  144,
  144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
  164,  144,    0,    0,    0,    0,    0,  144,  144,  144,
  212,  144,  212,  144,  212,  212,  212,    0,    0,   70,
  212,    0,  144,  189,   60,   60,   60,    0,  137,  139,
    0,  144,   63,   63,   63,    0,   83,    0,    0,  144,
  144,  144,  144,  144,  144,   84,  144,    0,  144,  144,
   63,   63,  144,    0,   83,  144,  144,  144,  144,    0,
    0,   60,    0,   84,  154,  154,  154,    0,    0,   63,
  154,    0,   34,   34,   34,    0,    0,    0,    0,  212,
    0,    0,  154,  154,  154,  154,  154,  154,  154,    0,
  154,  154,  154,  154,    0,  154,    0,   53,    0,    0,
    0,  154,  154,  154,  246,  154,    0,  154,   63,   34,
    0,    0,    0,   53,   53,   53,  154,  140,   53,   83,
    0,   67,  227,  228,   15,  154,  261,    0,   84,  232,
  233,    0,  270,  154,  154,  154,  154,  154,  154,    0,
  154,    0,  154,  154,  279,   80,  154,    0,   80,  154,
  154,  154,  154,    0,  140,    0,    0,  140,  140,  140,
  140,  140,  140,   80,  140,   24,   25,   26,    0,    0,
  296,   53,    0,    0,    0,  140,  140,    0,    0,   64,
  140,    0,    0,    0,   38,  263,    0,    0,    0,    0,
  268,  269,    0,    0,    0,    0,    0,  322,    0,    0,
  262,    0,  274,    0,    0,    0,  139,    0,    0,    0,
  140,    0,  261,    0,    0,  261,  261,  261,  261,    0,
   64,    0,  261,   64,    0,    0,   64,    0,   80,  294,
    0,  297,  139,  298,  299,  300,  340,   64,   64,  304,
  140,  140,   64,  139,    0,    0,  139,  139,  139,  139,
  139,  139,    0,  139,    0,  315,  317,    0,   83,    0,
  261,    0,    0,    0,  139,  139,    0,   84,   65,  139,
    0,    0,   64,    0,    0,    0,   83,   49,    0,   83,
   49,  328,  330,    0,    0,   84,  262,    0,   84,  262,
  262,  262,  262,    0,   49,   49,  262,    0,  342,  139,
  141,  139,   64,    0,    0,    0,    0,    0,    0,   65,
    0,    0,   65,    0,    0,   65,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   65,   65,    0,  139,
  139,   65,    0,    0,  262,   51,    0,  141,   51,    0,
  141,  141,  141,  141,  141,  141,    0,  141,    0,    0,
    0,    0,   51,   51,    0,    0,    0,   51,  141,  141,
   49,   65,    0,  141,    0,    0,    0,   80,    0,    0,
    0,    0,   50,    0,    0,   50,    0,    0,  140,  140,
  140,    0,    0,    0,  140,   80,    0,    0,   80,   50,
   50,   65,    0,  141,   50,    0,  140,  140,  140,  140,
  140,  140,  140,  140,  140,  140,  140,  140,    0,  140,
    0,    0,    0,    0,    0,  140,  140,  140,   51,  140,
    0,  140,    0,  141,  141,    0,    0,    0,   81,    0,
  140,   81,    0,    0,    0,    0,    0,    0,    0,  140,
   64,   64,   64,    0,    0,    0,   81,  140,  140,  140,
  140,  140,  140,    0,  140,   50,  140,  140,   64,   64,
  140,    0,    0,    0,  140,  140,  140,  139,  139,  139,
    0,    0,    0,  139,    0,    0,    0,   64,    0,    0,
    0,    0,    0,    0,    0,  139,  139,  139,  139,  139,
  139,  139,  139,  139,  139,  139,  139,    0,  139,   49,
    0,    0,    0,    0,  139,  139,  139,    0,  139,    0,
  139,   81,    0,    0,    0,    0,   64,   49,    0,  139,
   49,    0,    0,    0,    0,    0,    0,    0,  139,   65,
   65,   65,    0,    0,    0,    0,  139,  139,  139,  139,
  139,  139,    0,  139,    0,  139,  139,   65,   65,  139,
    0,    0,    0,  139,  139,  139,    0,   51,    0,    0,
    0,  141,  141,  141,    0,    0,   65,  141,    0,    0,
    0,    0,    0,   51,   51,   51,    0,    0,   51,  141,
  141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
  141,    0,  141,    0,   50,    0,    0,    0,  141,  141,
  141,    0,  141,    0,  141,   65,    0,    0,    0,    0,
    0,   50,   50,  141,  136,   50,    0,    0,    0,    0,
    0,    0,  141,    0,    0,    0,    0,    0,    0,    0,
  141,  141,  141,  141,  141,  141,    0,  141,    0,  141,
  141,    0,    0,  141,    0,    0,    0,  141,  141,  141,
   81,  136,    0,    0,  136,  136,  136,  136,  136,  136,
    0,  136,    0,    0,    0,    0,    0,    0,   81,    0,
    0,   81,  136,  136,    0,    0,   66,  136,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  135,    0,    0,    0,  136,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   66,    0,    0,
   66,    0,    0,   66,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   66,   66,    0,  136,  136,   66,
  135,    0,    0,  135,  135,  135,  135,  135,  135,    0,
  135,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  135,  135,    0,    0,   67,  135,    0,    0,   66,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  135,  137,    0,   66,
    0,    0,    0,    0,    0,    0,   67,    0,    0,   67,
    0,    0,   67,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   67,   67,    0,  135,  135,   67,    0,
    0,    0,    0,    0,  137,    0,    0,  137,  137,  137,
  137,  137,  137,    0,  137,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  137,  137,    0,   67,    0,
  137,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  136,  136,  136,    0,    0,
    0,  136,    0,    0,    0,    0,    0,    0,   67,    0,
  137,    0,    0,  136,  136,  136,  136,  136,  136,  136,
  136,  136,  136,  136,  136,    0,  136,    0,    0,    0,
    0,    0,  136,  136,  136,    0,  136,    0,  136,    0,
  137,  137,    0,   56,    0,    0,   33,  136,   34,    0,
    0,    0,    0,    0,    0,    0,  136,   66,   66,   66,
    0,    0,    0,    0,  136,  136,  136,  136,  136,  136,
    0,  136,    0,  136,  136,   66,   66,  136,    0,    0,
    0,  136,  136,  136,  135,  135,  135,    0,    0,    0,
  135,    0,    0,    0,   66,    0,    0,    0,    0,    0,
    0,    0,  135,  135,  135,  135,  135,  135,  135,  135,
  135,  135,  135,  135,    0,  135,    0,    0,    0,    0,
    0,  135,  135,  135,    0,  135,    0,  135,    0,    0,
    0,    0,    0,   66,    0,    0,  135,    0,    0,    0,
    0,    0,    0,    0,    0,  135,   67,   67,   67,    0,
    0,    0,    0,  135,  135,  135,  135,  135,  135,    0,
  135,    0,  135,  135,   67,   67,  135,    0,    0,    0,
  135,  135,  135,    0,    0,    0,    0,    0,  137,  137,
  137,    0,    0,   67,  137,    0,    0,    0,   26,   26,
    0,   26,    0,   26,    0,   26,  137,  137,  137,  137,
  137,  137,  137,  137,  137,  137,  137,  137,    0,  137,
    0,    0,    0,    0,    0,  137,  137,  137,    0,  137,
    0,  137,   67,    0,    0,    0,    0,    0,    0,    0,
  137,  138,    0,    0,    0,    0,    0,    0,    0,  137,
    0,    0,    0,    0,    0,    0,    0,  137,  137,  137,
  137,  137,  137,    0,  137,    0,  137,  137,    0,    0,
  137,    0,    0,    0,  137,  137,  137,    0,  138,    0,
  257,  138,  138,  138,  138,  138,  138,    0,  138,    0,
    0,    0,   80,    0,    0,    0,    0,    0,    0,  138,
  138,  258,   15,   16,  138,   17,    0,    0,    0,    0,
    0,    0,   19,   20,    0,   21,    0,   22,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  173,    0,    0,    0,  138,   23,    0,    0,    0,    0,
    0,    0,    0,   24,   25,   26,   27,   28,   29,    0,
   30,    0,   31,   32,    0,    0,   57,    0,    0,    0,
   36,   37,   38,    0,  138,  138,    0,  173,    0,    0,
  173,  173,  173,  173,  173,  173,    0,  173,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  173,  173,
    0,    0,    0,  173,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   26,    0,    0,    0,    0,    0,
    0,    0,    0,  173,  173,    0,    0,    0,    0,    0,
    0,  201,    0,  202,    0,    0,    0,    0,    0,  201,
  201,    0,    0,    0,    0,    0,    0,   26,   26,    0,
   26,    0,   26,  173,  173,    0,    0,   26,   26,    0,
   26,  173,   26,    0,  173,  173,  173,  173,  173,  173,
    0,  173,    0,    0,    0,    0,    0,    0,   26,   26,
   26,    0,  173,  173,    0,    0,  201,  173,   26,   26,
   26,   26,   26,   26,    0,   26,    0,   26,   26,    0,
    0,   26,  138,  138,  138,   26,   26,   26,  138,  252,
    0,  253,  201,    0,    0,    0,    0,  173,    0,    0,
  138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
  138,  138,    0,  138,    0,    0,    0,    0,    0,  138,
  138,  138,    0,  138,    0,  138,    0,  173,  173,    0,
    0,    0,    0,    0,  138,    0,    0,  289,    0,    0,
    0,    0,    0,  138,    0,    0,    0,    0,    0,    0,
    0,  138,  138,  138,  138,  138,  138,    0,  138,    0,
  138,  138,    0,    0,  138,    0,    0,    0,  138,  138,
  138,  173,  173,  173,    0,  133,    0,  173,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  173,
  173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
  173,    0,  173,    0,  201,    0,    0,    0,  173,  173,
  173,    0,  173,    0,  173,  133,  133,    0,  133,  133,
  133,    0,    0,  173,    0,    0,    0,    0,    0,    0,
    0,  201,  173,  133,  133,    0,    0,  358,  133,    0,
  173,  173,  173,  173,  173,  173,  363,  173,    0,  173,
  173,  366,    0,  173,    0,    0,  173,    0,    0,  173,
    0,    0,    0,    0,    0,  173,  173,  173,  133,  134,
    0,  173,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  173,  173,    0,  173,  173,  173,  173,
  173,  173,  173,  173,  173,    0,  173,    0,  133,  133,
    0,    0,  173,  173,  173,    0,  173,    0,  173,  134,
  134,    0,  134,  134,  134,    0,   68,    0,    0,    0,
    0,    0,    0,    0,    0,   61,  173,  134,  134,    0,
    0,    0,  134,    0,  173,  173,  173,  173,  173,  173,
    0,  173,    0,  173,  173,    0,    0,  173,    0,    0,
  173,    0,    0,  173,    0,    0,    0,   68,  147,    0,
   68,    0,  134,   68,    0,    0,   61,    0,    0,   61,
    0,    0,   61,    0,   68,   68,    0,    0,    0,   68,
    0,    0,    0,   61,   61,    0,    0,    0,   61,    0,
    0,    0,  134,  134,    0,    0,    0,    0,  147,  147,
    0,    0,  147,    0,    0,    0,    0,    0,    0,   68,
    0,    0,    0,    0,    0,    0,  147,  147,   61,    0,
    0,  147,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  133,  133,  133,   68,
    0,    0,  133,    0,    0,    0,    0,    0,   61,    0,
    0,  147,    0,    0,  133,  133,  133,  133,  133,  133,
  133,  133,  133,  133,  133,  133,    0,  133,    0,    0,
    0,    0,    0,  133,  133,  133,    0,  133,    0,  133,
    0,  147,  147,    0,    0,    0,    0,    0,  133,    0,
    0,    0,    0,    0,    0,    0,    0,  133,    0,    0,
    0,    0,    0,    0,    0,  133,  133,  133,  133,  133,
  133,    0,  133,    0,  133,  133,    0,    0,  133,    0,
    0,    0,  133,  133,  133,    0,    0,    0,    0,    0,
  134,  134,  134,    0,    0,    0,  134,   56,    0,    0,
   33,    0,   34,    0,    0,    0,    0,    0,  134,  134,
  134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
    0,  134,    0,    0,    0,    0,    0,  134,  134,  134,
    0,  134,    0,  134,    0,    0,    0,   68,   68,   68,
    0,    0,  134,    0,    0,    0,   61,   61,   61,    0,
    0,  134,    0,    0,    0,   68,   68,    0,    0,  134,
  134,  134,  134,  134,  134,   61,  134,    0,  134,  134,
    0,  153,  134,    0,   68,    0,  134,  134,  134,  147,
  147,  147,    0,   61,    0,  147,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  147,  147,  147,
  147,  147,  147,  147,  147,  147,  147,  147,  147,    0,
  147,  153,  153,   68,    0,  153,  147,  147,  147,    0,
  147,    0,  147,    0,    0,    0,    0,    0,    0,  153,
  153,  147,    0,    0,  153,    0,    0,    0,    0,    0,
  147,    0,    0,    0,    0,    0,    0,    0,  147,  147,
  147,  147,  147,  147,    0,  147,    0,  147,  147,    0,
  152,  147,    0,    0,  153,  147,  147,  147,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  153,  153,    0,    0,    0,    0,
  152,  152,    0,    0,  152,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  152,  152,
    0,    0,    0,  152,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   15,   16,    0,   17,
    0,    0,    0,  152,  132,    0,   19,   20,    0,   21,
    0,   22,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   23,
    0,    0,    0,  152,  152,    0,    0,   24,   25,   26,
   27,   28,   29,    0,  132,  132,   31,   32,  132,    0,
   57,    0,    0,    0,   36,   37,   38,    0,    0,    0,
    0,    0,  132,  132,    0,    0,    0,  132,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  153,  153,  153,    0,    0,    0,  153,    0,
    0,    0,    0,    0,    0,    0,    0,  132,    0,    0,
  153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
  153,  153,    0,  153,    0,    0,    0,    0,    0,  153,
  153,  153,    0,  153,    0,  153,    0,  132,  132,    0,
    0,    0,    0,    0,  153,    0,    0,    0,    0,    0,
    0,    0,    0,  153,    0,    0,    0,    0,    0,    0,
    0,  153,  153,  153,  153,  153,  153,    0,  153,    0,
  153,  153,    0,    0,  153,    0,    0,    0,  153,  153,
  153,  152,  152,  152,    0,   77,    0,  152,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  152,
  152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
  152,    0,  152,    0,    0,    0,    0,    0,  152,  152,
  152,    0,  152,    0,  152,   77,   77,    0,    0,   77,
    0,    0,    0,  152,    0,    0,    0,    0,    0,    0,
    0,    0,  152,   77,   77,    0,    0,    0,   77,    0,
  152,  152,  152,  152,  152,  152,    0,  152,    0,  152,
  152,    0,    0,  152,    0,    0,    0,  152,  152,  152,
    0,    0,    0,    0,    0,  132,  132,  132,   77,   75,
    0,  132,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  132,  132,  132,  132,  132,  132,  132,
  132,  132,  132,  132,  132,    0,  132,    0,   77,   77,
    0,    0,  132,  132,  132,    0,  132,    0,  132,   75,
   75,    0,    0,   75,    0,    0,    0,  132,    0,    0,
    0,   35,    0,    0,    0,    0,  132,   75,   75,    0,
    0,    0,   75,    0,  132,  132,  132,  132,  132,  132,
    0,  132,    0,  132,  132,    0,    0,  132,    0,    0,
    0,  132,  132,  132,    0,    0,    0,    0,    0,    0,
    0,   35,   75,    0,   35,    0,   35,    0,   35,    0,
    0,    0,    0,   37,    0,    0,    0,    0,    0,    0,
   35,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   75,   75,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   37,    0,    0,   37,    0,   37,    0,
   37,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   37,    0,    0,    0,   77,   77,   77,    0,
   28,    0,   77,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   77,   77,    0,   77,   77,   77,
   77,   77,   77,   77,   77,   77,    0,   77,    0,    0,
    0,    0,    0,   77,   77,   77,    0,   77,    0,   77,
   28,    0,    0,   28,    0,   28,    0,   28,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   77,    0,    0,
    0,    0,    0,    0,    0,   77,   77,   77,   77,   77,
   77,    0,   77,    0,   77,   77,    0,    0,   77,    0,
    0,    0,   77,   77,   77,    0,    0,    0,    0,    0,
   75,   75,   75,    0,   29,    0,   75,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   75,   75,
    0,   75,   75,   75,   75,   75,   75,   75,   75,   75,
    0,   75,    0,   28,    0,    0,    0,   75,   75,   75,
    0,   75,    0,   75,   29,    0,    0,   29,    0,   29,
    0,   29,   35,   35,   35,    0,    0,    0,    0,    0,
    0,   75,    0,    0,    0,    0,    0,    0,    0,   75,
   75,   75,   75,   75,   75,    0,   75,    0,   75,   75,
   35,   35,   75,   35,    0,    0,   75,   75,   75,   35,
   35,   35,    0,   35,    0,   35,    0,    0,    0,    0,
    0,    0,    0,    0,   37,   37,   37,    0,    0,    0,
    0,    0,    0,   35,    0,    0,    0,    0,    0,    0,
    0,   35,   35,   35,   35,   35,   35,   29,   35,    0,
   35,   35,   37,   37,   35,   37,    0,    0,   35,   35,
   35,   37,   37,   37,    0,   37,    0,   37,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   37,    0,    0,    0,    0,
    0,   28,   28,   37,   37,   37,   37,   37,   37,    0,
   37,    0,   37,   37,    0,    0,   37,    0,    0,    0,
   37,   37,   37,    0,    0,    0,    0,    0,    0,   28,
   28,    0,   28,    0,    0,    0,    0,    0,   28,   28,
   28,    0,   28,  174,   28,    0,  174,    0,  174,  174,
    0,  174,    0,  174,    0,    0,    0,    0,    0,    0,
    0,    0,   28,    0,    0,  174,    0,    0,    0,  174,
   28,   28,   28,   28,   28,   28,    0,   28,    0,   28,
   28,    0,    0,   28,    0,    0,    0,   28,   28,   28,
    0,    0,    0,    0,    0,   29,   29,    0,    0,    0,
  155,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   29,   29,    0,   29,    0,    0,    0,
  174,    0,   29,   29,   29,    0,   29,  155,   29,    0,
  155,  155,  155,  155,  155,  155,    0,  155,    0,    0,
    0,    0,    0,    0,    0,    0,   29,    0,  155,  155,
    0,    0,    0,  155,   29,   29,   29,   29,   29,   29,
    0,   29,    0,   29,   29,    0,    0,   29,    0,    0,
    0,   29,   29,   29,    0,    0,    0,    0,   74,    0,
    0,    0,    0,  155,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  155,  155,    0,    0,    0,   74,   74,
    0,   74,   74,   74,    0,   74,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   74,   74,    0,    0,
    0,   74,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  174,    0,    0,    0,    0,    0,    0,
    0,   74,    0,    0,    0,  174,  174,    0,  174,  174,
  174,  174,  174,  174,    0,  174,  174,    0,  174,    0,
    0,    0,    0,    0,    0,  174,  174,    0,  174,    0,
  174,   74,   74,    0,    0,    0,    0,    0,    0,  174,
    0,    0,    0,    0,    0,    0,    0,    0,  174,    0,
    0,    0,    0,    0,    0,    0,  174,  174,  174,  174,
  174,  174,    0,  174,    0,  174,  174,    0,    0,  174,
    0,    0,  174,  174,  174,  174,    0,    0,    0,    0,
    0,  155,  155,  155,    0,    0,    0,  155,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  155,
  155,  155,  155,  155,  155,  155,    0,  155,  155,    0,
  155,    0,  155,    0,    0,    0,    0,    0,  155,  155,
  155,    0,  155,    0,  155,    0,    0,    0,    0,    0,
    0,    0,    0,  155,    0,    0,    0,    0,    0,    0,
    0,    0,  155,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  155,  155,  155,    0,  155,    0,  155,
  155,    0,    0,  155,    0,    0,  155,  155,  155,   74,
   74,   74,    0,    0,    0,   74,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   74,   74,    0,
   74,   74,   74,   74,   74,   74,   74,    0,   74,    0,
   74,    0,    0,    0,   59,    0,   74,   74,   74,    0,
   74,    0,   74,    0,    0,    0,    0,   68,    0,    0,
   59,   59,   59,   75,   76,   59,   59,    0,    0,    0,
   74,    0,    0,    0,    0,    0,    0,    0,    0,   59,
    0,   74,   74,   74,   59,   74,    0,   74,   74,    0,
    0,   74,    0,    0,   59,   74,   74,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   59,   59,   59,   59,   59,   59,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   59,
    0,    0,    0,    0,    0,    0,    0,   62,  213,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   59,
    0,   59,    0,   59,   59,    0,    0,    0,    0,   59,
   59,   59,  234,   59,    0,   59,   59,   59,   59,   59,
   59,    0,   59,    0,   59,    0,   59,   59,   62,    0,
    0,   62,    0,    0,   62,    0,    0,    0,    0,   59,
    0,    0,    0,    0,    0,   62,   62,   59,    0,    0,
   62,    0,    0,   59,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   59,    0,    0,    0,    0,
    0,   59,    0,    0,    0,    0,   59,    0,   59,    0,
   62,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   58,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   59,    0,   59,   71,   72,   73,
   62,    0,   77,   90,  213,    0,  213,    0,  213,  213,
  213,   59,   59,   59,  213,    0,   90,    0,   59,    0,
    0,   73,   59,    0,   59,    0,    0,   59,   59,    0,
    0,  151,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   59,    0,    0,   59,   59,   59,   59,    0,    0,
    0,   59,   59,   59,    0,    0,    0,  171,  172,  173,
  174,  175,  176,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  213,    0,  343,    0,  344,    0,   59,
    0,   59,    0,    0,   59,    0,   90,    0,    0,   59,
    0,    0,    0,    0,    0,  211,    0,    0,    0,   59,
    0,    0,    0,    0,    0,    0,   90,    0,   90,    0,
   90,   90,    0,    0,    0,    0,  231,   90,   90,    0,
   90,    0,   90,   90,   90,   90,   90,   90,    0,   90,
    0,   90,    0,   90,  236,    0,    0,    0,   62,   62,
   62,    0,    0,    0,    0,    0,   90,    0,    0,    0,
    0,    0,    0,    0,   90,    0,   62,   62,    0,    0,
   90,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  260,    0,    0,   62,    0,    0,   90,    0,
    0,    0,    0,   90,    0,   90,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   90,    0,   90,    0,    0,    0,    0,    0,    0,
    0,  211,    0,  211,    0,  211,  211,  211,  301,  302,
  303,  211,    0,    0,    0,   90,    0,    0,    0,   90,
    0,   90,    0,    0,   90,   90,   39,    0,    0,    0,
    0,    0,   52,    0,    0,    0,    0,    0,  260,    0,
    0,  260,  260,  260,  260,    0,    0,    0,  260,   90,
   90,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  211,    0,    0,    0,  142,  144,   90,    0,   90,    0,
    0,   90,  146,  147,  142,  142,  260,    0,  153,  154,
    0,    0,    0,    0,    0,    0,   90,    0,  156,    0,
    0,  158,  159,  160,  161,  162,  163,    0,  165,  173,
  167,  169,  173,  173,  173,  173,  173,  173,    0,  173,
   39,  182,    0,    0,  142,    0,    0,    0,    0,    0,
  173,  173,  190,    0,    0,  173,    0,    0,    0,  196,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  214,    0,    0,    0,    0,  219,    0,  221,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   27,   27,    0,   27,    0,   27,    0,
   27,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   27,    0,    0,    0,  173,    0,   39,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  247,    0,    0,    0,    0,  249,    0,    0,
    0,    0,    0,    0,    0,    0,   52,    0,    0,    0,
    0,    0,    0,    0,   26,    0,    0,   26,    0,   26,
    0,   26,    0,  271,    0,    0,  275,  277,    0,    0,
    0,    0,  280,   26,  281,    0,   27,    0,   27,    0,
    0,  142,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  305,  306,    0,
    0,    0,    0,    0,    0,  107,    0,    0,  107,    0,
  107,    0,  107,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   52,    0,  107,    0,    0,   26,    0,   26,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  332,  173,  334,    0,    0,  173,
  337,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  173,  173,  173,    0,    0,  173,    0,  352,    0,
  173,  173,  173,  119,  173,    0,  119,    0,  119,    0,
  119,  173,  173,    0,  173,    0,  173,    0,  107,    0,
  107,    0,  119,    0,    0,    0,    0,    0,    0,   27,
    0,    0,    0,    0,  173,    0,    0,    0,    0,    0,
    0,    0,  173,  173,  173,  173,  173,  173,    0,  173,
    0,  173,  173,    0,    0,  173,    0,    0,  173,    0,
    0,  173,   27,   27,   27,   27,   27,   27,   27,   27,
   27,    0,   27,   27,   27,   27,    0,   27,   27,   27,
    0,    0,    0,    0,    0,    0,  119,    0,  119,    0,
   26,    0,    0,   27,   27,   27,   27,    0,    0,    0,
    0,    0,    0,   27,   27,   27,   27,   27,   27,    0,
   27,   27,   27,   27,   27,    0,   27,    0,    0,    0,
   27,   27,   27,   26,   26,   26,   26,   26,   26,   26,
   26,   26,    0,   26,   26,   26,   26,    0,   26,   26,
   26,   13,    0,    0,   33,    0,   34,    0,   14,    0,
    0,  107,    0,    0,   26,   26,   26,   26,    0,    0,
  108,    0,    0,    0,   26,   26,   26,   26,   26,   26,
    0,   26,   26,   26,   26,   26,    0,   26,    0,    0,
    0,   26,   26,   26,  107,  107,  107,  107,  107,  107,
  107,  107,  107,    0,  107,  107,  107,  107,    0,  107,
  107,  107,    0,    0,   13,    0,    0,   33,    0,   34,
    0,   14,    0,    0,    0,  107,  107,  107,  107,  119,
    0,    0,    0,  108,   12,  107,  107,  107,  107,  107,
  107,    0,  107,  107,  107,  107,  107,    0,  107,    0,
    0,    0,  107,  107,  107,    0,    0,    0,    0,    0,
    0,    0,  119,  119,  119,  119,  119,  119,  119,  119,
  119,    0,  119,  119,  119,  119,    0,  119,  119,  119,
    0,   13,    0,    0,   33,    0,   34,    0,   14,    0,
    0,    0,    0,  119,  119,  119,  119,   12,    0,  200,
  108,    0,    0,  119,  119,  119,  119,  119,  119,    0,
  119,  119,  119,  119,  119,    0,  119,    0,    0,    0,
  119,  119,  119,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   13,    0,    0,   33,    0,   34,    0,   14,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  108,    0,    0,   12,    0,  216,  106,    0,    0,
    0,    0,    0,    0,  107,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   15,   16,  109,   17,  110,  111,  112,  113,  114,    0,
   19,   20,  115,   21,    0,   22,  116,  117,    0,   56,
    0,    0,   33,    0,   34,   12,    0,  217,    0,    0,
  106,  118,  119,   23,    0,    0,    0,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,    0,   30,  120,
   31,   32,  121,    0,   35,    0,    0,    0,   36,   37,
   38,    0,    0,   15,   16,  109,   17,  110,  111,  112,
  113,  114,    0,   19,   20,  115,   21,    0,   22,  116,
  117,   13,    0,    0,   33,    0,   34,    0,   14,    0,
    0,    0,    0,    0,  118,  119,   23,  106,    0,    0,
  108,    0,    0,   78,   24,   25,   26,   27,   28,   29,
    0,   30,  120,   31,   32,  121,    0,   35,    0,    0,
    0,   36,   37,   38,    0,    0,    0,    0,    0,    0,
   15,   16,  109,   17,  110,  111,  112,  113,  114,    0,
   19,   20,  115,   21,    0,   22,  116,  117,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  106,    0,
    0,  118,  119,   23,   12,    0,  239,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,    0,   30,  120,
   31,   32,  121,    0,   35,    0,    0,    0,   36,   37,
   38,   15,   16,  109,   17,  110,  111,  112,  113,  114,
    0,   19,   20,  115,   21,    0,   22,  116,  117,   13,
    0,    0,   33,    0,   34,    0,   14,    0,    0,    0,
    0,    0,  118,  119,   23,    0,    0,    0,  108,    0,
    0,    0,   24,   25,   26,   27,   28,   29,    0,   30,
  120,   31,   32,  121,    0,   35,   79,    0,    0,   36,
   37,   38,    0,    0,    0,    0,    0,    0,   80,    0,
    0,   82,   83,   84,   85,   86,   87,   88,   15,   16,
   13,   17,    0,   33,    0,   34,    0,   14,   19,   20,
    0,   21,    0,   22,    0,    0,    0,    0,    0,  108,
    0,    0,   12,    0,  254,    0,    0,  106,    0,    0,
    0,   23,    0,    0,    0,    0,    0,    0,    0,   24,
   25,   26,   27,   28,   29,    0,   30,    0,   31,   32,
    0,    0,   57,    0,    0,    0,   36,   37,   38,    0,
   15,   16,  109,   17,  110,  111,  112,  113,  114,    0,
   19,   20,  115,   21,    0,   22,  116,  117,    0,    0,
    0,    0,    0,   12,    0,    0,    0,    0,    0,    0,
    0,  118,  119,   23,    0,    0,    0,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,    0,   30,  120,
   31,   32,  121,    0,   35,    0,    0,    0,   36,   37,
   38,    0,    0,   13,    0,    0,   33,    0,   34,    0,
   14,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  108,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  106,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   15,   16,
  109,   17,  110,  111,  112,  113,  114,    0,   19,   20,
  115,   21,    0,   22,  116,  117,   12,    0,  335,    0,
    0,    0,    0,    0,    0,    0,  106,    0,    0,  118,
  119,   23,    0,  288,    0,    0,    0,    0,    0,   24,
   25,   26,   27,   28,   29,    0,   30,  120,   31,   32,
  121,    0,   35,    0,    0,    0,   36,   37,   38,   15,
   16,  109,   17,  110,  111,  112,  113,  114,    0,   19,
   20,  115,   21,    0,   22,  116,  117,   13,    0,    0,
   33,    0,   34,    0,   14,    0,    0,    0,    0,    0,
  118,  119,   23,    0,    0,    0,  108,    0,    0,    0,
   24,   25,   26,   27,   28,   29,    0,   30,  120,   31,
   32,  121,    0,   35,    0,    0,    0,   36,   37,   38,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  106,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   12,    0,  355,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  118,    0,    0,  118,    0,  118,    0,  118,
    0,    0,   15,   16,  109,   17,  110,  111,  112,  113,
  114,  118,   19,   20,  115,   21,    0,   22,  116,  117,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  118,  119,   23,    0,    0,    0,    0,
    0,    0,    0,   24,   25,   26,   27,   28,   29,    0,
   30,  120,   31,   32,  121,    0,   35,    0,    0,    0,
   36,   37,   38,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  118,    0,  118,    0,    0,
    0,   13,    0,    0,   33,    0,   34,    0,   14,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  108,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  106,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   15,   16,  109,   17,
  110,  111,  112,  113,  114,    0,   19,   20,  115,   21,
    0,   22,  116,  117,   12,    0,    0,  111,    0,    0,
  111,    0,  111,    0,  111,    0,    0,  118,  119,   23,
    0,    0,    0,    0,    0,    0,  111,   24,   25,   26,
   27,   28,   29,    0,   30,  120,   31,   32,  121,    0,
   35,    0,    0,    0,   36,   37,   38,    0,  118,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  118,  118,  118,  118,  118,  118,  118,  118,  118,
  111,  118,  118,  118,  118,    0,  118,  118,  118,    0,
    0,   21,    0,    0,   21,    0,   21,    0,   21,    0,
    0,    0,  118,  118,  118,    0,    0,    0,    0,    0,
   21,    0,  118,  118,  118,  118,  118,  118,    0,  118,
  118,  118,  118,  118,    0,  118,    0,  106,    0,  118,
  118,  118,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   15,   16,  109,   17,  110,  111,  112,  113,  114,    0,
   19,   20,  115,   21,   21,   22,  116,  117,    0,    0,
    0,  184,    0,    0,  184,    0,  184,    0,  184,    0,
    0,  118,  119,   23,    0,    0,    0,    0,    0,    0,
  184,   24,   25,   26,   27,   28,   29,    0,   30,  120,
   31,   32,  121,  111,   35,    0,    0,    0,   36,   37,
   38,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  111,  111,  111,  111,
  111,  111,  111,  111,  111,    0,  111,  111,  111,  111,
    0,  111,  111,  111,  184,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  111,  111,  111,
    0,    0,    0,    0,    0,    0,    0,  111,  111,  111,
  111,  111,  111,    0,  111,  111,  111,  111,  111,    0,
  111,    0,    0,    0,  111,  111,  111,   21,    0,    0,
   17,    0,    0,   17,    0,   17,    0,   17,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   17,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   21,   21,   21,   21,   21,   21,   21,   21,   21,    0,
   21,   21,   21,   21,    0,   21,   21,   21,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   21,   21,   21,    0,    0,    0,    0,    0,    0,
    0,   21,   21,   21,   21,   21,   21,    0,   21,   21,
   21,   21,   21,   17,   21,    0,    0,  184,   21,   21,
   21,    0,    0,    0,   15,    0,    0,   15,    0,   15,
    0,   15,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   15,    0,    0,    0,    0,    0,    0,
  184,  184,  184,  184,  184,  184,  184,  184,  184,    0,
  184,  184,  184,  184,    0,  184,  184,  184,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  184,  184,  184,    0,    0,    0,    0,    0,    0,
    0,  184,  184,  184,  184,  184,  184,    0,  184,  184,
  184,  184,  184,    0,  184,    0,    0,   15,  184,  184,
  184,    0,    0,    0,   13,    0,    0,   13,    0,   13,
    0,   13,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   13,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   17,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   17,
   17,   17,   17,   17,   17,   17,   17,   17,    0,   17,
   17,   17,   17,    0,   17,   17,   17,   13,    0,    0,
    0,    0,    0,   56,  136,    0,   33,  135,   34,    0,
   17,   17,   17,    0,    0,    0,    0,    0,    0,    0,
   17,   17,   17,   17,   17,   17,   89,   17,   17,   17,
   17,   17,    0,   17,    0,    0,    0,   17,   17,   17,
   15,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   15,   15,   15,   15,   15,   15,   15,
   15,   15,    0,   15,   15,   15,   15,   78,   15,   15,
   15,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   15,   15,   15,    0,    0,    0,
    0,    0,    0,    0,   15,   15,   15,   15,   15,   15,
    0,   15,   15,   15,   15,   15,    0,   15,    0,    0,
   13,   15,   15,   15,   56,    0,    0,   33,    0,   34,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  185,    0,    0,    0,   89,    0,    0,
    0,    0,    0,   13,   13,   13,   13,   13,   13,   13,
   13,   13,    0,   13,   13,   13,   13,    0,   13,   13,
   13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   13,   13,   13,    0,    0,    0,
    0,    0,    0,    0,   13,   13,   13,   13,   13,   13,
    0,   13,   13,   13,   13,   13,    0,   13,   78,    0,
    0,   13,   13,   13,    0,    0,    0,    0,    0,    0,
   79,   56,  316,    0,   33,  135,   34,    0,    0,    0,
    0,    0,   80,   81,    0,   82,   83,   84,   85,   86,
   87,   88,   15,   16,   89,   17,    0,    0,    0,    0,
    0,    0,   19,   20,    0,   21,    0,   22,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,    0,    0,   24,   25,   26,   27,   28,   29,    0,
   30,    0,   31,   32,    0,    0,   57,    0,    0,    0,
   36,   37,   38,    0,    0,   78,   56,  327,    0,   33,
  135,   34,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   89,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  177,    0,    0,
    0,   79,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   80,   81,    0,   82,   83,   84,   85,
   86,   87,   88,   15,   16,    0,   17,    0,    0,    0,
    0,    0,    0,   19,   20,    0,   21,    0,   22,    0,
   78,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   23,   56,  329,    0,
   33,  135,   34,    0,   24,   25,   26,   27,   28,   29,
    0,   30,    0,   31,   32,    0,    0,   57,    0,    0,
   89,   36,   37,   38,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   79,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   80,   81,    0,   82,   83,   84,   85,   86,   87,   88,
   15,   16,    0,   17,    0,    0,    0,    0,    0,    0,
   19,   20,    0,   21,    0,   22,    0,    0,    0,    0,
    0,   78,    0,    0,   56,  136,    0,   33,    0,   34,
    0,    0,    0,   23,    0,    0,    0,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,   89,   30,    0,
   31,   32,    0,    0,   57,    0,    0,    0,   36,   37,
   38,    0,    0,   79,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   80,   81,    0,   82,   83,
   84,   85,   86,   87,   88,   15,   16,    0,   17,    0,
    0,    0,    0,    0,    0,   19,   20,    0,   21,    0,
   22,    0,    0,    0,    0,    0,    0,    0,   78,   56,
    0,    0,   33,  135,   34,    0,    0,    0,   23,    0,
    0,    0,    0,    0,    0,    0,   24,   25,   26,   27,
   28,   29,   89,   30,    0,   31,   32,    0,    0,   57,
    0,    0,    0,   36,   37,   38,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   80,   81,    0,   82,
   83,   84,   85,   86,   87,   88,   15,   16,    0,   17,
    0,    0,    0,   78,    0,   56,   19,   20,   33,   21,
   34,   22,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  235,    0,    0,    0,    0,   89,   23,
    0,    0,    0,    0,    0,    0,    0,   24,   25,   26,
   27,   28,   29,    0,   30,    0,   31,   32,    0,    0,
   57,    0,    0,    0,   36,   37,   38,    0,    0,    0,
    0,   79,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   80,   81,    0,   82,   83,   84,   85,
   86,   87,   88,   15,   16,    0,   17,    0,    0,   78,
    0,    0,    0,   19,   20,    0,   21,    0,   22,    0,
   56,  272,    0,   33,    0,   34,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   23,    0,    0,    0,
    0,    0,    0,   89,   24,   25,   26,   27,   28,   29,
    0,   30,    0,   31,   32,    0,    0,   57,    0,    0,
    0,   36,   37,   38,    0,    0,   79,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   80,   81,
    0,   82,   83,   84,   85,   86,   87,   88,   15,   16,
    0,   17,    0,    0,    0,    0,    0,    0,   19,   20,
    0,   21,    0,   22,   78,    0,    0,    0,    0,    0,
    0,    0,   56,  310,    0,   33,    0,   34,    0,    0,
    0,   23,    0,    0,    0,    0,    0,    0,    0,   24,
   25,   26,   27,   28,   29,   89,   30,    0,   31,   32,
    0,    0,   57,    0,    0,    0,   36,   37,   38,    0,
    0,    0,   79,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   80,   81,    0,   82,   83,   84,
   85,   86,   87,   88,   15,   16,    0,   17,    0,    0,
    0,    0,    0,    0,   19,   20,    0,   21,    0,   22,
   56,  312,    0,   33,    0,   34,   78,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,   89,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   57,    0,
    0,    0,   36,   37,   38,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   79,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   80,
   81,    0,   82,   83,   84,   85,   86,   87,   88,   15,
   16,    0,   17,    0,   78,    0,    0,    0,    0,   19,
   20,    0,   21,    0,   22,   56,  346,    0,   33,    0,
   34,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   23,    0,    0,    0,    0,    0,   89,    0,
   24,   25,   26,   27,   28,   29,    0,   30,    0,   31,
   32,    0,    0,   57,    0,    0,    0,   36,   37,   38,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   79,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   80,   81,    0,   82,   83,   84,   85,   86,   87,
   88,   15,   16,    0,   17,    0,    0,    0,    0,   78,
    0,   19,   20,    0,   21,    0,   22,   56,  348,    0,
   33,    0,   34,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   23,    0,    0,    0,    0,    0,
   89,    0,   24,   25,   26,   27,   28,   29,    0,   30,
    0,   31,   32,    0,    0,   57,    0,   79,    0,   36,
   37,   38,    0,    0,    0,    0,    0,    0,    0,   80,
   81,    0,   82,   83,   84,   85,   86,   87,   88,   15,
   16,    0,   17,    0,    0,    0,    0,    0,    0,   19,
   20,    0,   21,    0,   22,   56,    0,    0,   33,    0,
   34,   78,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   23,    0,  350,    0,    0,    0,   89,    0,
   24,   25,   26,   27,   28,   29,    0,   30,    0,   31,
   32,    0,    0,   57,    0,    0,    0,   36,   37,   38,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   79,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   80,   81,    0,   82,   83,   84,
   85,   86,   87,   88,   15,   16,    0,   17,    0,   78,
    0,    0,    0,    0,   19,   20,    0,   21,    0,   22,
   56,  359,    0,   33,    0,   34,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,   89,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   57,    0,
    0,    0,   36,   37,   38,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   80,   81,    0,   82,
   83,   84,   85,   86,   87,   88,   15,   16,   56,   17,
    0,   33,    0,   34,   78,    0,   19,   20,    0,   21,
    0,   22,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   89,    0,    0,    0,    0,    0,    0,    0,   23,
    0,    0,    0,    0,    0,    0,    0,   24,   25,   26,
   27,   28,   29,    0,   30,    0,   31,   32,    0,    0,
   57,    0,   79,    0,   36,   37,   38,    0,    0,    0,
    0,    0,    0,    0,   80,   81,    0,   82,   83,   84,
   85,   86,   87,   88,   15,   16,    0,   17,    0,    0,
    0,    0,   78,    0,   19,   20,    0,   21,    0,   22,
   93,    0,    0,   93,    0,   93,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,   93,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   57,    0,
    0,    0,   36,   37,   38,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   79,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   80,
   81,    0,   82,   83,   84,   85,   86,   87,   88,   15,
   16,    0,   17,    0,   93,    0,    0,   58,   58,   19,
   20,   58,   21,    0,   22,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   58,   58,    0,    0,    0,
   58,    0,   23,    0,    0,    0,    0,    0,    0,    0,
   24,   25,   26,   27,   28,   29,    0,   30,    0,   31,
   32,    0,    0,   57,    0,   79,    0,   36,   37,   38,
    0,    0,    0,    0,    0,    0,    0,   80,   81,    0,
   82,   83,   84,   85,   86,   87,   88,   15,   16,    0,
   17,    0,    0,    0,    0,    0,    0,   19,   20,    0,
   21,   58,   22,    0,   56,   56,    0,    0,   56,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   23,    0,   56,   56,    0,    0,    0,   56,   24,   25,
   26,   27,   28,   29,    0,   30,    0,   31,   32,    0,
    0,   57,    0,    0,    0,   36,   37,   38,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   93,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   93,
   93,    0,   93,   93,   93,   93,   93,   93,   93,   93,
   93,    0,   93,    0,    0,    0,    0,    0,   56,   93,
   93,    0,   93,    0,   93,    0,   56,    0,    0,   33,
    0,   34,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   93,    0,    0,    0,    0,    0,    0,    0,
   93,   93,   93,   93,   93,   93,    0,   93,    0,   93,
   93,    0,    0,   93,    0,    0,    0,   93,   93,   93,
   58,    0,    0,    0,   58,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   58,   58,   58,    0,
    0,   58,    0,    0,    0,   58,   58,   58,    0,   58,
   56,    0,    0,   33,    0,   34,   58,   58,    0,   58,
   78,   58,    0,    0,    0,    0,    0,    0,  326,    0,
    0,    0,    0,  259,    0,    0,    0,    0,    0,   58,
    0,    0,    0,    0,    0,    0,    0,   58,   58,   58,
   58,   58,   58,    0,   58,    0,   58,   58,    0,    0,
   58,    0,    0,    0,   58,   58,   58,   56,    0,    0,
    0,   56,   13,    0,    0,   33,    0,   34,    0,   14,
    0,    0,    0,   56,   56,   56,    0,    0,   56,    0,
    0,    0,   56,   56,   56,    0,   56,    0,    0,    0,
    0,    0,    0,   56,   56,    0,   56,    0,   56,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   13,    0,   56,   33,    0,   34,
    0,   14,    0,    0,   56,   56,   56,   56,   56,   56,
    0,   56,    0,   56,   56,    0,    0,   56,    0,    0,
    0,   56,   56,   56,    0,   12,    0,    0,    0,    0,
    0,    0,    0,   79,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   82,   83,
   84,   85,   86,   87,   88,   15,   16,    0,   17,    0,
    0,    0,    0,    0,    0,   19,   20,    0,   21,   56,
   22,    0,   33,    0,   34,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   23,    0,
    0,    0,  259,    0,    0,    0,   24,   25,   26,   27,
   28,   29,    0,   30,    0,   31,   32,  257,    0,   57,
    0,    0,    0,   36,   37,   38,    0,    0,    0,   80,
   81,    0,    0,    0,    0,    0,    0,    0,  258,   15,
   16,   13,   17,    0,   33,    0,   34,    0,   14,   19,
   20,    0,   21,    0,   22,    0,    0,    0,    0,    0,
  185,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   23,   10,   11,    0,    0,    0,    0,    0,
   24,   25,   26,   27,   28,   29,    0,   30,    0,   31,
   32,    0,    0,   57,    0,    0,    0,   36,   37,   38,
    0,   15,   16,    0,   17,    0,    0,    0,    0,    0,
   18,   19,   20,    0,   21,    0,   22,    0,   13,  141,
  106,   33,    0,   34,    0,   14,    0,    0,    0,    0,
    0,    0,    0,    0,   23,    0,    0,    0,    0,    0,
    0,    0,   24,   25,   26,   27,   28,   29,    0,   30,
    0,   31,   32,   15,   16,   35,   17,    0,  111,   36,
   37,   38,    0,   19,   20,    0,   21,    0,   22,    0,
   13,  149,    0,   33,    0,   34,    0,   14,    0,    0,
    0,    0,    0,    0,  118,  119,   23,    0,    0,    0,
    0,    0,    0,    0,   24,   25,   26,   27,   28,   29,
    0,   30,    0,   31,   32,    0,  257,   35,    0,    0,
    0,   36,   37,   38,    0,    0,    0,    0,   80,   81,
    0,    0,    0,    0,    0,    0,    0,  258,   15,   16,
    0,   17,    0,    0,    0,    0,    0,    0,   19,   20,
    0,   21,    0,   22,    0,   13,    0,    0,   33,    0,
   34,    0,   14,    0,    0,    0,    0,    0,    0,    0,
    0,   23,    0,    0,  177,    0,    0,    0,    0,   24,
   25,   26,   27,   28,   29,    0,   30,    0,   31,   32,
    0,    0,   57,    0,    0,    0,   36,   37,   38,    0,
   15,   16,    0,   17,    0,    0,    0,    0,    0,    0,
   19,   20,    0,   21,    0,   22,   13,    0,    0,   33,
    0,   34,    0,   14,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   23,    0,    0,    0,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,    0,   30,    0,
   31,   32,    0,    0,   35,    0,    0,    0,   36,   37,
   38,    0,    0,    0,    0,    0,    0,    0,   13,    0,
    0,   33,    0,   34,    0,   14,    0,   15,   16,    0,
   17,    0,    0,    0,    0,    0,    0,   19,   20,    0,
   21,    0,   22,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   23,    0,    0,    0,    0,    0,    0,    0,   24,   25,
   26,   27,   28,   29,    0,   30,    0,   31,   32,   15,
   16,   35,   17,    0,    0,   36,   37,   38,    0,   19,
   20,    0,   21,  293,   22,    0,   33,    0,   34,    0,
   14,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   23,    0,    0,    0,    0,    0,    0,    0,
   24,   25,   26,   27,   28,   29,    0,   30,  166,   31,
   32,    0,    0,   35,    0,    0,    0,   36,   37,   38,
    0,    0,    0,    0,    0,  293,    0,    0,   33,    0,
   34,    0,   14,    0,   15,   16,    0,   17,    0,    0,
    0,    0,    0,    0,   19,   20,    0,   21,    0,   22,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,  168,
    0,    0,    0,    0,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   35,    0,
    0,    0,   36,   37,   38,   15,   16,    0,   17,    0,
    0,    0,    0,    0,  293,   19,   20,   33,   21,   34,
   22,   14,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  218,    0,    0,    0,    0,    0,    0,   23,    0,
    0,    0,    0,    0,    0,    0,   24,   25,   26,   27,
   28,   29,    0,   30,    0,   31,   32,   15,   16,   35,
   17,    0,    0,   36,   37,   38,    0,   19,   20,    0,
   21,    0,   22,    0,    0,    0,   56,    0,    0,   33,
    0,   34,    0,    0,    0,    0,    0,    0,    0,    0,
   23,    0,    0,    0,    0,    0,    0,    0,   24,   25,
   26,   27,   28,   29,    0,   30,  166,   31,   32,    0,
    0,   35,    0,    0,    0,   36,   37,   38,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   15,   16,    0,   17,    0,    0,    0,    0,
    0,   13,   19,   20,   33,   21,   34,   22,   14,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  168,    0,
    0,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,    0,    0,   24,   25,   26,   27,   28,   29,    0,
   30,    0,   31,   32,   15,   16,   35,   17,    0,    0,
   36,   37,   38,   56,   19,   20,   33,   21,   34,   22,
   14,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,    0,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,  218,   35,    0,
    0,    0,   36,   37,   38,   56,    0,    0,   33,    0,
   34,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   15,   16,    0,   17,    0,    0,    0,
    0,    0,    0,   19,   20,    0,   21,    0,   22,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   23,    0,    0,    0,
    0,    0,    0,  257,   24,   25,   26,   27,   28,   29,
    0,   30,    0,   31,   32,    0,    0,   35,    0,    0,
    0,   36,   37,   38,  258,   15,   16,  207,   17,    0,
   33,    0,   34,    0,   14,   19,   20,    0,   21,    0,
   22,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   23,    0,
    0,    0,    0,    0,    0,    0,   24,   25,   26,   27,
   28,   29,    0,   30,    0,   31,   32,    0,    0,   57,
    0,    0,    0,   36,   37,   38,    0,    0,    0,  293,
   15,   16,   33,   17,   34,    0,   14,    0,    0,    0,
   19,   20,    0,   21,    0,   22,    0,    0,    0,    0,
    0,    0,    0,   26,    0,    0,   26,    0,   26,    0,
   26,    0,    0,   23,    0,    0,    0,    0,    0,    0,
    0,   24,   25,   26,   27,   28,   29,    0,   30,    0,
   31,   32,   15,   16,   35,   17,    0,    0,   36,   37,
   38,    0,   19,   20,    0,   21,    0,   22,    0,    0,
    0,    0,    0,    0,    0,   56,    0,    0,   33,    0,
   34,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,    0,    0,   24,   25,   26,   27,   28,   29,    0,
   30,    0,   31,   32,   15,   16,   35,   17,    0,    0,
   36,   37,   38,    0,   19,   20,    0,   21,    0,   22,
    0,    0,    0,    0,    0,    0,    0,    0,  170,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,    0,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   57,    0,
    0,    0,   36,   37,   38,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   15,   16,    0,   17,
    0,    0,    0,    0,    0,    0,   19,   20,    0,   21,
    0,   22,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   23,
    0,    0,    0,    0,    0,    0,    0,   24,   25,   26,
   27,   28,   29,    0,   30,    0,   31,   32,    0,    0,
   35,    0,    0,    0,   36,   37,   38,    0,   15,   16,
    0,   17,    0,    0,    0,    0,    0,    0,   19,   20,
    0,   21,    0,   22,    0,    0,    0,    0,    0,    0,
    0,    0,   26,   26,    0,   26,    0,    0,    0,    0,
    0,   23,   26,   26,    0,   26,    0,   26,    0,   24,
   25,   26,   27,   28,   29,    0,   30,    0,   31,   32,
    0,    0,   35,    0,    0,   26,   36,   37,   38,    0,
    0,    0,    0,   26,   26,   26,   26,   26,   26,    0,
   26,    0,   26,   26,   15,   16,   26,   17,    0,    0,
   26,   26,   26,    0,   19,   20,    0,   21,    0,   22,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,    0,    0,   24,   25,   26,   27,   28,
   29,    0,   30,    0,   31,   32,    0,    0,   57,    0,
    0,    0,   36,   37,   38,
};
static const YYINT yycheck[] = {                         37,
    0,   37,   59,   91,   42,   43,   42,   45,  207,   47,
  192,   47,   41,   59,    7,   50,   51,   10,   11,   99,
   44,   41,  123,   41,   40,   59,   44,   59,  108,   79,
   59,   91,   41,   59,  336,   41,   44,   37,   44,   59,
   40,   41,   42,   43,   44,   45,   41,   47,   40,   42,
   59,  124,   58,   59,   40,  357,   40,    0,   58,   59,
  263,   40,    0,   63,   59,  100,   40,  247,  263,  249,
  263,   65,   66,   41,   40,   93,   40,  110,  313,   41,
  113,  336,  132,  116,  117,   93,  289,  120,  286,    0,
  123,   59,   44,   93,  293,  130,  289,   59,   41,  123,
   40,   44,  346,   41,   47,  185,   44,   41,  101,   47,
   44,  105,  347,  348,  337,   58,   59,  108,  124,  289,
   58,   59,   41,  123,  124,   63,   37,  330,  331,  332,
   41,   42,   43,   44,   45,  330,   47,  330,  313,  332,
   59,   93,  322,    0,  263,  289,  349,   58,   59,   40,
   93,    0,   63,  330,  336,   93,  333,  190,   40,   93,
  330,  331,  332,  196,   41,   40,  263,   44,   35,  349,
  288,   41,  347,  348,   44,  357,   47,  227,  228,  349,
  123,  361,   93,    0,   41,  123,  330,   44,  332,  330,
   47,    0,   41,   41,  185,   44,   44,  263,   47,  256,
  288,   58,   59,   91,  284,  124,  263,  257,  281,   58,
   59,  284,  123,  124,   63,   41,   41,  263,   44,   44,
   37,  347,  348,   40,   41,   42,   43,   44,   45,  263,
   47,  263,  323,   44,  263,   44,   93,  263,   47,   59,
  320,   58,   59,  263,   93,  238,   63,  282,  242,   41,
   59,  263,   44,   41,  263,   41,   44,  263,   44,  263,
   41,  261,  262,  263,  131,  315,  123,  267,  263,   41,
  350,  341,   58,   59,  123,  281,   93,   63,  284,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   41,  292,  284,   44,  263,  331,   41,  298,  299,
  300,  263,  302,  288,  304,   40,  123,  124,  346,   41,
  346,   41,   44,  313,  123,  308,   41,   41,  261,  262,
  263,    0,  322,  261,  262,  263,  359,    0,   59,  320,
  330,  331,  332,  333,  334,  335,  123,  337,  124,  339,
  340,  279,  280,  343,  263,   41,  346,  347,  348,  349,
  261,  262,  263,  101,   41,  298,  267,   44,   41,  350,
  298,   44,  281,  179,   44,  284,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
   88,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,  300,
  257,  302,  259,  304,  261,  262,  263,   -1,   -1,  337,
  267,   -1,  313,  111,  261,  262,  263,   -1,   52,   53,
   -1,  322,  261,  262,  263,   -1,   41,   -1,   -1,  330,
  331,  332,  333,  334,  335,   41,  337,   -1,  339,  340,
  279,  280,  343,   -1,   59,  346,  347,  348,  349,   -1,
   -1,  298,   -1,   59,  261,  262,  263,   -1,   -1,  298,
  267,   -1,  261,  262,  263,   -1,   -1,   -1,   -1,  326,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,   -1,
  287,  288,  289,  290,   -1,  292,   -1,  263,   -1,   -1,
   -1,  298,  299,  300,  192,  302,   -1,  304,  337,  298,
   -1,   -1,   -1,  279,  280,  281,  313,    0,  284,  124,
   -1,  286,  146,  147,  289,  322,  208,   -1,  124,  153,
  154,   -1,  220,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,  232,   41,  343,   -1,   44,  346,
  347,  348,  349,   -1,   37,   -1,   -1,   40,   41,   42,
   43,   44,   45,   59,   47,  330,  331,  332,   -1,   -1,
  258,  337,   -1,   -1,   -1,   58,   59,   -1,   -1,    0,
   63,   -1,   -1,   -1,  349,  209,   -1,   -1,   -1,   -1,
  214,  215,   -1,   -1,   -1,   -1,   -1,  285,   -1,   -1,
  208,   -1,  226,   -1,   -1,   -1,    0,   -1,   -1,   -1,
   93,   -1,  294,   -1,   -1,  297,  298,  299,  300,   -1,
   41,   -1,  304,   44,   -1,   -1,   47,   -1,  124,  257,
   -1,  259,  256,  261,  262,  263,  324,   58,   59,  267,
  123,  124,   63,   37,   -1,   -1,   40,   41,   42,   43,
   44,   45,   -1,   47,   -1,  279,  280,   -1,  263,   -1,
  342,   -1,   -1,   -1,   58,   59,   -1,  263,    0,   63,
   -1,   -1,   93,   -1,   -1,   -1,  281,   41,   -1,  284,
   44,  305,  306,   -1,   -1,  281,  294,   -1,  284,  297,
  298,  299,  300,   -1,   58,   59,  304,   -1,  326,   93,
    0,  325,  123,   -1,   -1,   -1,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,  123,
  124,   63,   -1,   -1,  342,   41,   -1,   37,   44,   -1,
   40,   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   58,   59,
  124,   93,   -1,   63,   -1,   -1,   -1,  263,   -1,   -1,
   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,  261,  262,
  263,   -1,   -1,   -1,  267,  281,   -1,   -1,  284,   58,
   59,  123,   -1,   93,   63,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,   -1,  292,
   -1,   -1,   -1,   -1,   -1,  298,  299,  300,  124,  302,
   -1,  304,   -1,  123,  124,   -1,   -1,   -1,   41,   -1,
  313,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,
  261,  262,  263,   -1,   -1,   -1,   59,  330,  331,  332,
  333,  334,  335,   -1,  337,  124,  339,  340,  279,  280,
  343,   -1,   -1,   -1,  347,  348,  349,  261,  262,  263,
   -1,   -1,   -1,  267,   -1,   -1,   -1,  298,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,   -1,  292,  263,
   -1,   -1,   -1,   -1,  298,  299,  300,   -1,  302,   -1,
  304,  124,   -1,   -1,   -1,   -1,  337,  281,   -1,  313,
  284,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,  261,
  262,  263,   -1,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   -1,  337,   -1,  339,  340,  279,  280,  343,
   -1,   -1,   -1,  347,  348,  349,   -1,  263,   -1,   -1,
   -1,  261,  262,  263,   -1,   -1,  298,  267,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,   -1,   -1,  284,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,  263,   -1,   -1,   -1,  298,  299,
  300,   -1,  302,   -1,  304,  337,   -1,   -1,   -1,   -1,
   -1,  280,  281,  313,    0,  284,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
  263,   37,   -1,   -1,   40,   41,   42,   43,   44,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,  281,   -1,
   -1,  284,   58,   59,   -1,   -1,    0,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,
   44,   -1,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,  123,  124,   63,
   37,   -1,   -1,   40,   41,   42,   43,   44,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,    0,   63,   -1,   -1,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,    0,   -1,  123,
   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,  123,  124,   63,   -1,
   -1,   -1,   -1,   -1,   37,   -1,   -1,   40,   41,   42,
   43,   44,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   93,   -1,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   -1,   -1,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   93,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,   -1,
   -1,   -1,  298,  299,  300,   -1,  302,   -1,  304,   -1,
  123,  124,   -1,   40,   -1,   -1,   43,  313,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  322,  261,  262,  263,
   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,  279,  280,  343,   -1,   -1,
   -1,  347,  348,  349,  261,  262,  263,   -1,   -1,   -1,
  267,   -1,   -1,   -1,  298,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,   -1,  292,   -1,   -1,   -1,   -1,
   -1,  298,  299,  300,   -1,  302,   -1,  304,   -1,   -1,
   -1,   -1,   -1,  337,   -1,   -1,  313,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,  261,  262,  263,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,  279,  280,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,   -1,   -1,   -1,   -1,  261,  262,
  263,   -1,   -1,  298,  267,   -1,   -1,   -1,   40,   41,
   -1,   43,   -1,   45,   -1,   47,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,   -1,  292,
   -1,   -1,   -1,   -1,   -1,  298,  299,  300,   -1,  302,
   -1,  304,  337,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  313,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,   -1,   37,   -1,
  267,   40,   41,   42,   43,   44,   45,   -1,   47,   -1,
   -1,   -1,  279,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,  288,  289,  290,   63,  292,   -1,   -1,   -1,   -1,
   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
    0,   -1,   -1,   -1,   93,  322,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,  123,  124,   -1,   37,   -1,   -1,
   40,   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  256,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,    0,   -1,   -1,   -1,   -1,   -1,
   -1,  125,   -1,  127,   -1,   -1,   -1,   -1,   -1,  133,
  134,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,   -1,
  292,   -1,  294,  123,  124,   -1,   -1,  299,  300,   -1,
  302,   37,  304,   -1,   40,   41,   42,   43,   44,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,  320,  321,
  322,   -1,   58,   59,   -1,   -1,  180,   63,  330,  331,
  332,  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,
   -1,  343,  261,  262,  263,  347,  348,  349,  267,  203,
   -1,  205,  206,   -1,   -1,   -1,   -1,   93,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,
  299,  300,   -1,  302,   -1,  304,   -1,  123,  124,   -1,
   -1,   -1,   -1,   -1,  313,   -1,   -1,  251,   -1,   -1,
   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,   -1,
  339,  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,  261,  262,  263,   -1,    0,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,  318,   -1,   -1,   -1,  298,  299,
  300,   -1,  302,   -1,  304,   40,   41,   -1,   43,   44,
   45,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  345,  322,   58,   59,   -1,   -1,  351,   63,   -1,
  330,  331,  332,  333,  334,  335,  360,  337,   -1,  339,
  340,  365,   -1,  343,   -1,   -1,  346,   -1,   -1,  349,
   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   93,    0,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,  285,
  286,  287,  288,  289,  290,   -1,  292,   -1,  123,  124,
   -1,   -1,  298,  299,  300,   -1,  302,   -1,  304,   40,
   41,   -1,   43,   44,   45,   -1,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,    0,  322,   58,   59,   -1,
   -1,   -1,   63,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
  346,   -1,   -1,  349,   -1,   -1,   -1,   41,    0,   -1,
   44,   -1,   93,   47,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   47,   -1,   58,   59,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,   -1,  123,  124,   -1,   -1,   -1,   -1,   40,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   93,   -1,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  261,  262,  263,  123,
   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   -1,   93,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,
   -1,   -1,   -1,  298,  299,  300,   -1,  302,   -1,  304,
   -1,  123,  124,   -1,   -1,   -1,   -1,   -1,  313,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
  261,  262,  263,   -1,   -1,   -1,  267,   40,   -1,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,  300,
   -1,  302,   -1,  304,   -1,   -1,   -1,  261,  262,  263,
   -1,   -1,  313,   -1,   -1,   -1,  261,  262,  263,   -1,
   -1,  322,   -1,   -1,   -1,  279,  280,   -1,   -1,  330,
  331,  332,  333,  334,  335,  280,  337,   -1,  339,  340,
   -1,    0,  343,   -1,  298,   -1,  347,  348,  349,  261,
  262,  263,   -1,  298,   -1,  267,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,   -1,
  292,   40,   41,  337,   -1,   44,  298,  299,  300,   -1,
  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,  313,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,
  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,
  332,  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,
    0,  343,   -1,   -1,   93,  347,  348,  349,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,  124,   -1,   -1,   -1,   -1,
   40,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,   -1,  292,
   -1,   -1,   -1,   93,    0,   -1,  299,  300,   -1,  302,
   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,
   -1,   -1,   -1,  123,  124,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,   40,   41,  339,  340,   44,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  261,  262,  263,   -1,   -1,   -1,  267,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,
  299,  300,   -1,  302,   -1,  304,   -1,  123,  124,   -1,
   -1,   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,   -1,
  339,  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,  261,  262,  263,   -1,    0,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,
  300,   -1,  302,   -1,  304,   40,   41,   -1,   -1,   44,
   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   58,   59,   -1,   -1,   -1,   63,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,  261,  262,  263,   93,    0,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,   -1,  292,   -1,  123,  124,
   -1,   -1,  298,  299,  300,   -1,  302,   -1,  304,   40,
   41,   -1,   -1,   44,   -1,   -1,   -1,  313,   -1,   -1,
   -1,    0,   -1,   -1,   -1,   -1,  322,   58,   59,   -1,
   -1,   -1,   63,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   40,   93,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,  261,  262,  263,   -1,
    0,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,
  285,  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,
   -1,   -1,   -1,  298,  299,  300,   -1,  302,   -1,  304,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
  261,  262,  263,   -1,    0,   -1,  267,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
   -1,  282,  283,  284,  285,  286,  287,  288,  289,  290,
   -1,  292,   -1,  123,   -1,   -1,   -1,  298,  299,  300,
   -1,  302,   -1,  304,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,  261,  262,  263,   -1,   -1,   -1,   -1,   -1,
   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,
  331,  332,  333,  334,  335,   -1,  337,   -1,  339,  340,
  289,  290,  343,  292,   -1,   -1,  347,  348,  349,  298,
  299,  300,   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  261,  262,  263,   -1,   -1,   -1,
   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,  123,  337,   -1,
  339,  340,  289,  290,  343,  292,   -1,   -1,  347,  348,
  349,  298,  299,  300,   -1,  302,   -1,  304,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,
   -1,  261,  262,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,  289,
  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,
  300,   -1,  302,   37,  304,   -1,   40,   -1,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   59,   -1,   -1,   -1,   63,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,  261,  262,   -1,   -1,   -1,
    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,   -1,  292,   -1,   -1,   -1,
  124,   -1,  298,  299,  300,   -1,  302,   37,  304,   -1,
   40,   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   58,   59,
   -1,   -1,   -1,   63,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,   -1,   -1,   -1,   40,   41,
   -1,   43,   44,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   -1,  279,  280,   -1,  282,  283,
  284,  285,  286,  287,   -1,  289,  290,   -1,  292,   -1,
   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   -1,
  304,  123,  124,   -1,   -1,   -1,   -1,   -1,   -1,  313,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,
   -1,   -1,  346,  347,  348,  349,   -1,   -1,   -1,   -1,
   -1,  261,  262,  263,   -1,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,   -1,  287,  288,   -1,
  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  298,  299,
  300,   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,  346,  347,  348,  261,
  262,  263,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,
  282,  283,  284,  285,  286,  287,  288,   -1,  290,   -1,
  292,   -1,   -1,   -1,   17,   -1,  298,  299,  300,   -1,
  302,   -1,  304,   -1,   -1,   -1,   -1,   30,   -1,   -1,
   33,   34,   35,   36,   37,   38,   39,   -1,   -1,   -1,
  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,
   -1,  333,  334,  335,   57,  337,   -1,  339,  340,   -1,
   -1,  343,   -1,   -1,   67,  347,  348,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   95,   96,   97,   98,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  122,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,  131,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  142,
   -1,  144,   -1,  146,  147,   -1,   -1,   -1,   -1,  152,
  153,  154,  155,  156,   -1,  158,  159,  160,  161,  162,
  163,   -1,  165,   -1,  167,   -1,  169,  170,   41,   -1,
   -1,   44,   -1,   -1,   47,   -1,   -1,   -1,   -1,  182,
   -1,   -1,   -1,   -1,   -1,   58,   59,  190,   -1,   -1,
   63,   -1,   -1,  196,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  208,   -1,   -1,   -1,   -1,
   -1,  214,   -1,   -1,   -1,   -1,  219,   -1,  221,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   17,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  247,   -1,  249,   33,   34,   35,
  123,   -1,   38,   39,  257,   -1,  259,   -1,  261,  262,
  263,  264,  265,  266,  267,   -1,   52,   -1,  271,   -1,
   -1,   57,  275,   -1,  277,   -1,   -1,  280,  281,   -1,
   -1,   67,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  294,   -1,   -1,  297,  298,  299,  300,   -1,   -1,
   -1,  304,  305,  306,   -1,   -1,   -1,   93,   94,   95,
   96,   97,   98,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  326,   -1,  328,   -1,  330,   -1,  332,
   -1,  334,   -1,   -1,  337,   -1,  122,   -1,   -1,  342,
   -1,   -1,   -1,   -1,   -1,  131,   -1,   -1,   -1,  352,
   -1,   -1,   -1,   -1,   -1,   -1,  142,   -1,  144,   -1,
  146,  147,   -1,   -1,   -1,   -1,  152,  153,  154,   -1,
  156,   -1,  158,  159,  160,  161,  162,  163,   -1,  165,
   -1,  167,   -1,  169,  170,   -1,   -1,   -1,  261,  262,
  263,   -1,   -1,   -1,   -1,   -1,  182,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  190,   -1,  279,  280,   -1,   -1,
  196,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  208,   -1,   -1,  298,   -1,   -1,  214,   -1,
   -1,   -1,   -1,  219,   -1,  221,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  247,   -1,  249,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,   -1,  259,   -1,  261,  262,  263,  264,  265,
  266,  267,   -1,   -1,   -1,  271,   -1,   -1,   -1,  275,
   -1,  277,   -1,   -1,  280,  281,    7,   -1,   -1,   -1,
   -1,   -1,   13,   -1,   -1,   -1,   -1,   -1,  294,   -1,
   -1,  297,  298,  299,  300,   -1,   -1,   -1,  304,  305,
  306,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  326,   -1,   -1,   -1,   55,   56,  332,   -1,  334,   -1,
   -1,  337,   63,   64,   65,   66,  342,   -1,   69,   70,
   -1,   -1,   -1,   -1,   -1,   -1,  352,   -1,   79,   -1,
   -1,   82,   83,   84,   85,   86,   87,   -1,   89,   37,
   91,   92,   40,   41,   42,   43,   44,   45,   -1,   47,
  101,  102,   -1,   -1,  105,   -1,   -1,   -1,   -1,   -1,
   58,   59,  113,   -1,   -1,   63,   -1,   -1,   -1,  120,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  132,   -1,   -1,   -1,   -1,  137,   -1,  139,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   41,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,  124,   -1,  179,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  193,   -1,   -1,   -1,   -1,  198,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  207,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,   -1,  224,   -1,   -1,  227,  228,   -1,   -1,
   -1,   -1,  233,   59,  235,   -1,  123,   -1,  125,   -1,
   -1,  242,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  268,  269,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,
   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  293,   -1,   59,   -1,   -1,  123,   -1,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  315,  263,  317,   -1,   -1,  267,
  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,   -1,   -1,  284,   -1,  339,   -1,
  288,  289,  290,   40,  292,   -1,   43,   -1,   45,   -1,
   47,  299,  300,   -1,  302,   -1,  304,   -1,  123,   -1,
  125,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,  256,
   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,  337,
   -1,  339,  340,   -1,   -1,  343,   -1,   -1,  346,   -1,
   -1,  349,  289,  290,  291,  292,  293,  294,  295,  296,
  297,   -1,  299,  300,  301,  302,   -1,  304,  305,  306,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,   -1,
  256,   -1,   -1,  320,  321,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,  289,  290,  291,  292,  293,  294,  295,
  296,  297,   -1,  299,  300,  301,  302,   -1,  304,  305,
  306,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,  256,   -1,   -1,  320,  321,  322,  323,   -1,   -1,
   59,   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,  289,  290,  291,  292,  293,  294,
  295,  296,  297,   -1,  299,  300,  301,  302,   -1,  304,
  305,  306,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,   -1,   -1,   -1,  320,  321,  322,  323,  256,
   -1,   -1,   -1,   59,  123,  330,  331,  332,  333,  334,
  335,   -1,  337,  338,  339,  340,  341,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  289,  290,  291,  292,  293,  294,  295,  296,
  297,   -1,  299,  300,  301,  302,   -1,  304,  305,  306,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,  320,  321,  322,  323,  123,   -1,  125,
   59,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,  123,   -1,  125,  256,   -1,   -1,
   -1,   -1,   -1,   -1,  263,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,   -1,  304,  305,  306,   -1,   40,
   -1,   -1,   43,   -1,   45,  123,   -1,  125,   -1,   -1,
  256,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,   -1,   -1,  289,  290,  291,  292,  293,  294,  295,
  296,  297,   -1,  299,  300,  301,  302,   -1,  304,  305,
  306,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,  320,  321,  322,  256,   -1,   -1,
   59,   -1,   -1,  124,  330,  331,  332,  333,  334,  335,
   -1,  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,   -1,  304,  305,  306,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  256,   -1,
   -1,  320,  321,  322,  123,   -1,  125,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,  289,  290,  291,  292,  293,  294,  295,  296,  297,
   -1,  299,  300,  301,  302,   -1,  304,  305,  306,   40,
   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,
   -1,   -1,  320,  321,  322,   -1,   -1,   -1,   59,   -1,
   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,  337,
  338,  339,  340,  341,   -1,  343,  267,   -1,   -1,  347,
  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,  279,   -1,
   -1,  282,  283,  284,  285,  286,  287,  288,  289,  290,
   40,  292,   -1,   43,   -1,   45,   -1,   47,  299,  300,
   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,  123,   -1,  125,   -1,   -1,  256,   -1,   -1,
   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,
  331,  332,  333,  334,  335,   -1,  337,   -1,  339,  340,
   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,   -1,  304,  305,  306,   -1,   -1,
   -1,   -1,   -1,  123,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  256,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,
  291,  292,  293,  294,  295,  296,  297,   -1,  299,  300,
  301,  302,   -1,  304,  305,  306,  123,   -1,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  256,   -1,   -1,  320,
  321,  322,   -1,  263,   -1,   -1,   -1,   -1,   -1,  330,
  331,  332,  333,  334,  335,   -1,  337,  338,  339,  340,
  341,   -1,  343,   -1,   -1,   -1,  347,  348,  349,  289,
  290,  291,  292,  293,  294,  295,  296,  297,   -1,  299,
  300,  301,  302,   -1,  304,  305,  306,   40,   -1,   -1,
   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,
  320,  321,  322,   -1,   -1,   -1,   59,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,  338,  339,
  340,  341,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  256,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,
   -1,   -1,  289,  290,  291,  292,  293,  294,  295,  296,
  297,   59,  299,  300,  301,  302,   -1,  304,  305,  306,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  320,  321,  322,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,   -1,   -1,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  256,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,  291,  292,
  293,  294,  295,  296,  297,   -1,  299,  300,  301,  302,
   -1,  304,  305,  306,  123,   -1,   -1,   40,   -1,   -1,
   43,   -1,   45,   -1,   47,   -1,   -1,  320,  321,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   59,  330,  331,  332,
  333,  334,  335,   -1,  337,  338,  339,  340,  341,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,   -1,  256,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  123,  299,  300,  301,  302,   -1,  304,  305,  306,   -1,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,
   59,   -1,  330,  331,  332,  333,  334,  335,   -1,  337,
  338,  339,  340,  341,   -1,  343,   -1,  256,   -1,  347,
  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,  123,  304,  305,  306,   -1,   -1,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,
   -1,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   59,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,  256,  343,   -1,   -1,   -1,  347,  348,
  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,  291,  292,
  293,  294,  295,  296,  297,   -1,  299,  300,  301,  302,
   -1,  304,  305,  306,  123,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  320,  321,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,  338,  339,  340,  341,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,  256,   -1,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,   -1,  304,  305,  306,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,  123,  343,   -1,   -1,  256,  347,  348,
  349,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,  293,  294,  295,  296,  297,   -1,
  299,  300,  301,  302,   -1,  304,  305,  306,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,  338,
  339,  340,  341,   -1,  343,   -1,   -1,  123,  347,  348,
  349,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  256,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  289,
  290,  291,  292,  293,  294,  295,  296,  297,   -1,  299,
  300,  301,  302,   -1,  304,  305,  306,  123,   -1,   -1,
   -1,   -1,   -1,   40,   41,   -1,   43,   44,   45,   -1,
  320,  321,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   63,  337,  338,  339,
  340,  341,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
  256,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,  293,  294,  295,
  296,  297,   -1,  299,  300,  301,  302,  124,  304,  305,
  306,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  320,  321,  322,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,  338,  339,  340,  341,   -1,  343,   -1,   -1,
  256,  347,  348,  349,   40,   -1,   -1,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,  293,  294,  295,
  296,  297,   -1,  299,  300,  301,  302,   -1,  304,  305,
  306,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  320,  321,  322,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,  338,  339,  340,  341,   -1,  343,  124,   -1,
   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,
  267,   40,   41,   -1,   43,   44,   45,   -1,   -1,   -1,
   -1,   -1,  279,  280,   -1,  282,  283,  284,  285,  286,
  287,  288,  289,  290,   63,  292,   -1,   -1,   -1,   -1,
   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,   -1,
  347,  348,  349,   -1,   -1,  124,   40,   41,   -1,   43,
   44,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  263,   -1,   -1,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,  285,
  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,   -1,
   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  322,   40,   41,   -1,
   43,   44,   45,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   63,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,   -1,  282,  283,  284,  285,  286,  287,  288,
  289,  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,
  299,  300,   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,
   -1,  124,   -1,   -1,   40,   41,   -1,   43,   -1,   45,
   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   63,  337,   -1,
  339,  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,  282,  283,
  284,  285,  286,  287,  288,  289,  290,   -1,  292,   -1,
   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   -1,
  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   40,
   -1,   -1,   43,   44,   45,   -1,   -1,   -1,  322,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   63,  337,   -1,  339,  340,   -1,   -1,  343,
   -1,   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,  282,
  283,  284,  285,  286,  287,  288,  289,  290,   -1,  292,
   -1,   -1,   -1,  124,   -1,   40,  299,  300,   43,  302,
   45,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   -1,   -1,   -1,   -1,   63,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,   -1,   -1,   -1,
   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,  285,
  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,  124,
   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,
   40,   41,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,
   -1,   -1,   -1,   63,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,   -1,  267,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
   -1,  282,  283,  284,  285,  286,  287,  288,  289,  290,
   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,
   -1,  302,   -1,  304,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   41,   -1,   43,   -1,   45,   -1,   -1,
   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,
  331,  332,  333,  334,  335,   63,  337,   -1,  339,  340,
   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,   -1,
   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,
  285,  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,
   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,
   40,   41,   -1,   43,   -1,   45,  124,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   63,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,   -1,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,  124,   -1,   -1,   -1,   -1,  299,
  300,   -1,  302,   -1,  304,   40,   41,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   63,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,   -1,  282,  283,  284,  285,  286,  287,
  288,  289,  290,   -1,  292,   -1,   -1,   -1,   -1,  124,
   -1,  299,  300,   -1,  302,   -1,  304,   40,   41,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,
   63,   -1,  330,  331,  332,  333,  334,  335,   -1,  337,
   -1,  339,  340,   -1,   -1,  343,   -1,  267,   -1,  347,
  348,  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,   -1,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,
  300,   -1,  302,   -1,  304,   40,   -1,   -1,   43,   -1,
   45,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   59,   -1,   -1,   -1,   63,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,
  285,  286,  287,  288,  289,  290,   -1,  292,   -1,  124,
   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,
   40,   41,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   63,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,  282,
  283,  284,  285,  286,  287,  288,  289,  290,   40,  292,
   -1,   43,   -1,   45,  124,   -1,  299,  300,   -1,  302,
   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,
  343,   -1,  267,   -1,  347,  348,  349,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,   -1,  282,  283,  284,
  285,  286,  287,  288,  289,  290,   -1,  292,   -1,   -1,
   -1,   -1,  124,   -1,  299,  300,   -1,  302,   -1,  304,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   63,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,   -1,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,  124,   -1,   -1,   40,   41,  299,
  300,   44,  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   63,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,  267,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,   -1,
  282,  283,  284,  285,  286,  287,  288,  289,  290,   -1,
  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,
  302,  124,  304,   -1,   40,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  322,   -1,   58,   59,   -1,   -1,   -1,   63,  330,  331,
  332,  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,
   -1,  343,   -1,   -1,   -1,  347,  348,  349,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  267,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,   -1,  282,  283,  284,  285,  286,  287,  288,  289,
  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,  124,  299,
  300,   -1,  302,   -1,  304,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
  263,   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,   -1,
   -1,  284,   -1,   -1,   -1,  288,  289,  290,   -1,  292,
   40,   -1,   -1,   43,   -1,   45,  299,  300,   -1,  302,
  124,  304,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,  263,   -1,   -1,
   -1,  267,   40,   -1,   -1,   43,   -1,   45,   -1,   47,
   -1,   -1,   -1,  279,  280,  281,   -1,   -1,  284,   -1,
   -1,   -1,  288,  289,  290,   -1,  292,   -1,   -1,   -1,
   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   -1,  322,   43,   -1,   45,
   -1,   47,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,  123,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  267,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  282,  283,
  284,  285,  286,  287,  288,  289,  290,   -1,  292,   -1,
   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   40,
  304,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,
   -1,   -1,   63,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   -1,  337,   -1,  339,  340,  267,   -1,  343,
   -1,   -1,   -1,  347,  348,  349,   -1,   -1,   -1,  279,
  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  288,  289,
  290,   40,  292,   -1,   43,   -1,   45,   -1,   47,  299,
  300,   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,  261,  262,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,   -1,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,  289,  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,
  298,  299,  300,   -1,  302,   -1,  304,   -1,   40,   41,
  256,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,  337,
   -1,  339,  340,  289,  290,  343,  292,   -1,  294,  347,
  348,  349,   -1,  299,  300,   -1,  302,   -1,  304,   -1,
   40,   41,   -1,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,  320,  321,  322,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,  267,  343,   -1,   -1,
   -1,  347,  348,  349,   -1,   -1,   -1,   -1,  279,  280,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  288,  289,  290,
   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,
   -1,  302,   -1,  304,   -1,   40,   -1,   -1,   43,   -1,
   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  322,   -1,   -1,  263,   -1,   -1,   -1,   -1,  330,
  331,  332,  333,  334,  335,   -1,  337,   -1,  339,  340,
   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,   -1,
  289,  290,   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,
  299,  300,   -1,  302,   -1,  304,   40,   -1,   -1,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,   -1,
  339,  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,
  349,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,
   -1,   43,   -1,   45,   -1,   47,   -1,  289,  290,   -1,
  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,
  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,
  332,  333,  334,  335,   -1,  337,   -1,  339,  340,  289,
  290,  343,  292,   -1,   -1,  347,  348,  349,   -1,  299,
  300,   -1,  302,   40,  304,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  330,  331,  332,  333,  334,  335,   -1,  337,  263,  339,
  340,   -1,   -1,  343,   -1,   -1,   -1,  347,  348,  349,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,
   45,   -1,   47,   -1,  289,  290,   -1,  292,   -1,   -1,
   -1,   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,  263,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,  289,  290,   -1,  292,   -1,
   -1,   -1,   -1,   -1,   40,  299,  300,   43,  302,   45,
  304,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  263,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   -1,  337,   -1,  339,  340,  289,  290,  343,
  292,   -1,   -1,  347,  348,  349,   -1,  299,  300,   -1,
  302,   -1,  304,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  322,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,
  332,  333,  334,  335,   -1,  337,  263,  339,  340,   -1,
   -1,  343,   -1,   -1,   -1,  347,  348,  349,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  289,  290,   -1,  292,   -1,   -1,   -1,   -1,
   -1,   40,  299,  300,   43,  302,   45,  304,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  263,   -1,
   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,  289,  290,  343,  292,   -1,   -1,
  347,  348,  349,   40,  299,  300,   43,  302,   45,  304,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,  263,  343,   -1,
   -1,   -1,  347,  348,  349,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,   -1,  292,   -1,   -1,   -1,
   -1,   -1,   -1,  299,  300,   -1,  302,   -1,  304,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,
   -1,   -1,   -1,  267,  330,  331,  332,  333,  334,  335,
   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,   -1,
   -1,  347,  348,  349,  288,  289,  290,   40,  292,   -1,
   43,   -1,   45,   -1,   47,  299,  300,   -1,  302,   -1,
  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,
  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,
   -1,   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   40,
  289,  290,   43,  292,   45,   -1,   47,   -1,   -1,   -1,
  299,  300,   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   47,   -1,   -1,  322,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  330,  331,  332,  333,  334,  335,   -1,  337,   -1,
  339,  340,  289,  290,  343,  292,   -1,   -1,  347,  348,
  349,   -1,  299,  300,   -1,  302,   -1,  304,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,  289,  290,  343,  292,   -1,   -1,
  347,  348,  349,   -1,  299,  300,   -1,  302,   -1,  304,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  313,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,   -1,  292,
   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,   -1,  302,
   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  330,  331,  332,
  333,  334,  335,   -1,  337,   -1,  339,  340,   -1,   -1,
  343,   -1,   -1,   -1,  347,  348,  349,   -1,  289,  290,
   -1,  292,   -1,   -1,   -1,   -1,   -1,   -1,  299,  300,
   -1,  302,   -1,  304,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  289,  290,   -1,  292,   -1,   -1,   -1,   -1,
   -1,  322,  299,  300,   -1,  302,   -1,  304,   -1,  330,
  331,  332,  333,  334,  335,   -1,  337,   -1,  339,  340,
   -1,   -1,  343,   -1,   -1,  322,  347,  348,  349,   -1,
   -1,   -1,   -1,  330,  331,  332,  333,  334,  335,   -1,
  337,   -1,  339,  340,  289,  290,  343,  292,   -1,   -1,
  347,  348,  349,   -1,  299,  300,   -1,  302,   -1,  304,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  330,  331,  332,  333,  334,
  335,   -1,  337,   -1,  339,  340,   -1,   -1,  343,   -1,
   -1,   -1,  347,  348,  349,
};
#define YYFINAL 4
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
#define YYMAXTOKEN 350
#define YYUNDFTOKEN 400
#define YYTRANSLATE(a) ((a) > YYMAXTOKEN ? YYUNDFTOKEN : (a))
#if YYDEBUG
static const char *const yyname[] = {

"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,"'%'",0,0,"'('","')'","'*'","'+'","','","'-'",0,"'/'",0,0,0,0,0,0,0,0,0,0,
"':'","';'",0,0,0,"'?'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'['",0,"']'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"'{'",
"'|'","'}'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"FIRSTTOKEN","PROGRAM","PASTAT","PASTAT2",
"XBEGIN","XEND","NL","ARRAY","MATCH","NOTMATCH","MATCHOP","FINAL","DOT","ALL",
"CCL","NCCL","CHAR","OR","STAR","QUEST","PLUS","EMPTYRE","AND","BOR","APPEND",
"EQ","GE","GT","LE","LT","NE","IN","ARG","BLTIN","BREAK","CLOSE","CONTINUE",
"DELETE","DO","EXIT","FOR","FUNC","SUB","GSUB","IF","INDEX","LSUBSTR",
"MATCHFCN","NEXT","NEXTFILE","ADD","MINUS","MULT","DIVIDE","MOD","ASSIGN",
"ASGNOP","ADDEQ","SUBEQ","MULTEQ","DIVEQ","MODEQ","POWEQ","PRINT","PRINTF",
"SPRINTF","ELSE","INTEST","CONDEXPR","POSTINCR","PREINCR","POSTDECR","PREDECR",
"VAR","IVAR","VARNF","CALL","NUMBER","STRING","REGEXPR","GETLINE","RETURN",
"SPLIT","SUBSTR","WHILE","CAT","NOT","UMINUS","UPLUS","POWER","DECR","INCR",
"INDIRECT","LASTTOKEN",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"illegal-symbol",
};
static const char *const yyrule[] = {
"$accept : program",
"program : pas",
"program : error",
"and : AND",
"and : and NL",
"bor : BOR",
"bor : bor NL",
"comma : ','",
"comma : comma NL",
"do : DO",
"do : do NL",
"else : ELSE",
"else : else NL",
"$$1 :",
"for : FOR '(' opt_simple_stmt ';' opt_nl pattern ';' opt_nl opt_simple_stmt rparen $$1 stmt",
"$$2 :",
"for : FOR '(' opt_simple_stmt ';' ';' opt_nl opt_simple_stmt rparen $$2 stmt",
"$$3 :",
"for : FOR '(' varname IN varname rparen $$3 stmt",
"funcname : VAR",
"funcname : CALL",
"if : IF '(' pattern rparen",
"lbrace : '{'",
"lbrace : lbrace NL",
"nl : NL",
"nl : nl NL",
"opt_nl :",
"opt_nl : nl",
"opt_pst :",
"opt_pst : pst",
"opt_simple_stmt :",
"opt_simple_stmt : simple_stmt",
"pas : opt_pst",
"pas : opt_pst pa_stats opt_pst",
"pa_pat : pattern",
"pa_stat : pa_pat",
"pa_stat : pa_pat lbrace stmtlist '}'",
"pa_stat : pa_pat ',' opt_nl pa_pat",
"pa_stat : pa_pat ',' opt_nl pa_pat lbrace stmtlist '}'",
"pa_stat : lbrace stmtlist '}'",
"pa_stat : XBEGIN lbrace stmtlist '}'",
"pa_stat : XEND lbrace stmtlist '}'",
"$$4 :",
"pa_stat : FUNC funcname '(' varlist rparen $$4 lbrace stmtlist '}'",
"pa_stats : pa_stat",
"pa_stats : pa_stats opt_pst pa_stat",
"patlist : pattern",
"patlist : patlist comma pattern",
"ppattern : var ASGNOP ppattern",
"ppattern : ppattern '?' ppattern ':' ppattern",
"ppattern : ppattern bor ppattern",
"ppattern : ppattern and ppattern",
"ppattern : ppattern MATCHOP reg_expr",
"ppattern : ppattern MATCHOP ppattern",
"ppattern : ppattern IN varname",
"ppattern : '(' plist ')' IN varname",
"ppattern : ppattern term",
"ppattern : re",
"ppattern : term",
"pattern : var ASGNOP pattern",
"pattern : pattern '?' pattern ':' pattern",
"pattern : pattern bor pattern",
"pattern : pattern and pattern",
"pattern : pattern EQ pattern",
"pattern : pattern GE pattern",
"pattern : pattern GT pattern",
"pattern : pattern LE pattern",
"pattern : pattern LT pattern",
"pattern : pattern NE pattern",
"pattern : pattern MATCHOP reg_expr",
"pattern : pattern MATCHOP pattern",
"pattern : pattern IN varname",
"pattern : '(' plist ')' IN varname",
"pattern : pattern '|' GETLINE var",
"pattern : pattern '|' GETLINE",
"pattern : pattern term",
"pattern : re",
"pattern : term",
"plist : pattern comma pattern",
"plist : plist comma pattern",
"pplist : ppattern",
"pplist : pplist comma ppattern",
"prarg :",
"prarg : pplist",
"prarg : '(' plist ')'",
"print : PRINT",
"print : PRINTF",
"pst : NL",
"pst : ';'",
"pst : pst NL",
"pst : pst ';'",
"rbrace : '}'",
"rbrace : rbrace NL",
"re : reg_expr",
"re : NOT re",
"$$5 :",
"reg_expr : '/' $$5 REGEXPR '/'",
"rparen : ')'",
"rparen : rparen NL",
"simple_stmt : print prarg '|' term",
"simple_stmt : print prarg APPEND term",
"simple_stmt : print prarg GT term",
"simple_stmt : print prarg",
"simple_stmt : DELETE varname '[' patlist ']'",
"simple_stmt : DELETE varname",
"simple_stmt : pattern",
"simple_stmt : error",
"st : nl",
"st : ';' opt_nl",
"stmt : BREAK st",
"stmt : CONTINUE st",
"$$6 :",
"$$7 :",
"stmt : do $$6 stmt $$7 WHILE '(' pattern ')' st",
"stmt : EXIT pattern st",
"stmt : EXIT st",
"stmt : for",
"stmt : if stmt else stmt",
"stmt : if stmt",
"stmt : lbrace stmtlist rbrace",
"stmt : NEXT st",
"stmt : NEXTFILE st",
"stmt : RETURN pattern st",
"stmt : RETURN st",
"stmt : simple_stmt st",
"$$8 :",
"stmt : while $$8 stmt",
"stmt : ';' opt_nl",
"stmtlist : stmt",
"stmtlist : stmtlist stmt",
"subop : SUB",
"subop : GSUB",
"term : term '/' ASGNOP term",
"term : term '+' term",
"term : term '-' term",
"term : term '*' term",
"term : term '/' term",
"term : term '%' term",
"term : term POWER term",
"term : '-' term",
"term : '+' term",
"term : NOT term",
"term : BLTIN '(' ')'",
"term : BLTIN '(' patlist ')'",
"term : BLTIN",
"term : CALL '(' ')'",
"term : CALL '(' patlist ')'",
"term : CLOSE term",
"term : DECR var",
"term : INCR var",
"term : var DECR",
"term : var INCR",
"term : GETLINE var LT term",
"term : GETLINE LT term",
"term : GETLINE var",
"term : GETLINE",
"term : INDEX '(' pattern comma pattern ')'",
"term : INDEX '(' pattern comma reg_expr ')'",
"term : '(' pattern ')'",
"term : MATCHFCN '(' pattern comma reg_expr ')'",
"term : MATCHFCN '(' pattern comma pattern ')'",
"term : NUMBER",
"term : SPLIT '(' pattern comma varname comma pattern ')'",
"term : SPLIT '(' pattern comma varname comma reg_expr ')'",
"term : SPLIT '(' pattern comma varname ')'",
"term : SPRINTF '(' patlist ')'",
"term : STRING",
"term : subop '(' reg_expr comma pattern ')'",
"term : subop '(' pattern comma pattern ')'",
"term : subop '(' reg_expr comma pattern comma var ')'",
"term : subop '(' pattern comma pattern comma var ')'",
"term : SUBSTR '(' pattern comma pattern comma pattern ')'",
"term : SUBSTR '(' pattern comma pattern ')'",
"term : var",
"var : varname",
"var : varname '[' patlist ']'",
"var : IVAR",
"var : INDIRECT term",
"varlist :",
"varlist : VAR",
"varlist : varlist comma VAR",
"varname : VAR",
"varname : ARG",
"varname : VARNF",
"while : WHILE '(' pattern rparen",

};
#endif

#if YYDEBUG
int      yydebug;
#endif

int      yyerrflag;
int      yychar;
YYSTYPE  yyval;
YYSTYPE  yylval;
int      yynerrs;

/* define the initial stack-sizes */
#ifdef YYSTACKSIZE
#undef YYMAXDEPTH
#define YYMAXDEPTH  YYSTACKSIZE
#else
#ifdef YYMAXDEPTH
#define YYSTACKSIZE YYMAXDEPTH
#else
#define YYSTACKSIZE 10000
#define YYMAXDEPTH  10000
#endif
#endif

#define YYINITSTACKSIZE 200

typedef struct {
    unsigned stacksize;
    YYINT    *s_base;
    YYINT    *s_mark;
    YYINT    *s_last;
    YYSTYPE  *l_base;
    YYSTYPE  *l_mark;
} YYSTACKDATA;
/* variables for the parser stack */
static YYSTACKDATA yystack;
#line 540 "awkgram.y"

void setfname(Cell *p)
{
  if (isarr(p))
    SYNTAX("%s is an array, not a function", p->nval);
  else if (isfcn(p))
    SYNTAX("you can't define function %s more than once", p->nval);
  curfname = p->nval;
}

int constnode(Node *p)
{
  return isvalue(p) && ((Cell *) (p->narg[0]))->csub == CCON;
}

char *strnode(Node *p)
{
  return ((Cell *)(p->narg[0]))->sval;
}

Node *notnull(Node *n)
{
  switch (n->nobj) {
    case LE: case LT: case EQ: case NE: case GT: case GE:
    case BOR: case AND: case NOT:
      return n;
    default:
      return op2(NE, relop, n, nullnode);
  }
}

void checkdup(Node *vl, Cell *cp)    /* check if name already in list */
{
  char *s = cp->nval;
  for ( ; vl; vl = vl->nnext) {
    if (strcmp(s, ((Cell *)(vl->narg[0]))->nval) == 0) {
      SYNTAX("duplicate argument %s", s);
      break;
    }
  }
}

void yyinit (void)
{
  beginloc = endloc = winner = 0;
  infunc = inloop = 0;
  curfname = 0;
  arglist = 0;
  lexbuf_sz = 256;
  lexbuf = (char*)malloc (lexbuf_sz);
}

void yyend (void)
{
  free (lexbuf);
}
#line 2595 "ytab.cpp"

#if YYDEBUG
#include <stdio.h>	/* needed for printf */
#ifndef YYDBGOUT
#define YYDBGOUT printf
#endif
#endif

#include <stdlib.h>	/* needed for malloc, etc */
#include <string.h>	/* needed for memset */

/* allocate initial stack or double stack size, up to YYMAXDEPTH */
static int yygrowstack(YYSTACKDATA *data)
{
    int i;
    unsigned newsize;
    YYINT *newss;
    YYSTYPE *newvs;

    if ((newsize = data->stacksize) == 0)
        newsize = YYINITSTACKSIZE;
    else if (newsize >= YYMAXDEPTH)
        return YYENOMEM;
    else if ((newsize *= 2) > YYMAXDEPTH)
        newsize = YYMAXDEPTH;

    i = (int) (data->s_mark - data->s_base);
    newss = (YYINT *)realloc(data->s_base, newsize * sizeof(*newss));
    if (newss == 0)
        return YYENOMEM;

    data->s_base = newss;
    data->s_mark = newss + i;

    newvs = (YYSTYPE *)realloc(data->l_base, newsize * sizeof(*newvs));
    if (newvs == 0)
        return YYENOMEM;

    data->l_base = newvs;
    data->l_mark = newvs + i;

    data->stacksize = newsize;
    data->s_last = data->s_base + newsize - 1;
    return 0;
}

#if YYPURE || defined(YY_NO_LEAKS)
static void yyfreestack(YYSTACKDATA *data)
{
    free(data->s_base);
    free(data->l_base);
    memset(data, 0, sizeof(*data));
}
#else
#define yyfreestack(data) /* nothing */
#endif

#define YYABORT  goto yyabort
#define YYREJECT goto yyabort
#define YYACCEPT goto yyaccept
#define YYERROR  goto yyerrlab

int
YYPARSE_DECL()
{
    int yym, yyn, yystate;
#if YYDEBUG
    const char *yys;

    if ((yys = getenv("YYDEBUG")) != 0)
    {
        yyn = *yys;
        if (yyn >= '0' && yyn <= '9')
            yydebug = yyn - '0';
    }
    else
      yydebug = 1; /* default yydebug value */
#endif

    yym = 0;
    yyn = 0;
    yynerrs = 0;
    yyerrflag = 0;
    yychar = YYEMPTY;
    yystate = 0;

#if YYPURE
    memset(&yystack, 0, sizeof(yystack));
#endif

    if (yystack.s_base == NULL && yygrowstack(&yystack) == YYENOMEM) goto yyoverflow;
    yystack.s_mark = yystack.s_base;
    yystack.l_mark = yystack.l_base;
    yystate = 0;
    *yystack.s_mark = 0;

yyloop:
    if ((yyn = yydefred[yystate]) != 0) goto yyreduce;
    if (yychar < 0)
    {
        yychar = YYLEX;
        if (yychar < 0) yychar = YYEOF;
#if YYDEBUG
        if (yydebug)
        {
            if ((yys = yyname[YYTRANSLATE(yychar)]) == NULL) yys = yyname[YYUNDFTOKEN];
            YYDBGOUT("%sdebug: state %d, reading %d (%s)\n",
                    YYPREFIX, yystate, yychar, yys);
        }
#endif
    }
    if (((yyn = yysindex[yystate]) != 0) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == (YYINT) yychar)
    {
#if YYDEBUG
        if (yydebug)
            YYDBGOUT("%sdebug: state %d, shifting to state %d\n",
                    YYPREFIX, yystate, yytable[yyn]);
#endif
        if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack) == YYENOMEM) goto yyoverflow;
        yystate = yytable[yyn];
        *++yystack.s_mark = yytable[yyn];
        *++yystack.l_mark = yylval;
        yychar = YYEMPTY;
        if (yyerrflag > 0)  --yyerrflag;
        goto yyloop;
    }
    if (((yyn = yyrindex[yystate]) != 0) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == (YYINT) yychar)
    {
        yyn = yytable[yyn];
        goto yyreduce;
    }
    if (yyerrflag != 0) goto yyinrecovery;

    YYERROR_CALL("syntax error");

    goto yyerrlab; /* redundant goto avoids 'unused label' warning */
yyerrlab:
    ++yynerrs;

yyinrecovery:
    if (yyerrflag < 3)
    {
        yyerrflag = 3;
        for (;;)
        {
            if (((yyn = yysindex[*yystack.s_mark]) != 0) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == (YYINT) YYERRCODE)
            {
#if YYDEBUG
                if (yydebug)
                    YYDBGOUT("%sdebug: state %d, error recovery shifting\
 to state %d\n", YYPREFIX, *yystack.s_mark, yytable[yyn]);
#endif
                if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack) == YYENOMEM) goto yyoverflow;
                yystate = yytable[yyn];
                *++yystack.s_mark = yytable[yyn];
                *++yystack.l_mark = yylval;
                goto yyloop;
            }
            else
            {
#if YYDEBUG
                if (yydebug)
                    printf("%sdebug: error recovery discarding state %d\n",
                            YYPREFIX, *yystack.s_mark);
#endif
                if (yystack.s_mark <= yystack.s_base) goto yyabort;
                --yystack.s_mark;
                --yystack.l_mark;
            }
        }
    }
    else
    {
        if (yychar == YYEOF) goto yyabort;
#if YYDEBUG
        if (yydebug)
        {
            if ((yys = yyname[YYTRANSLATE(yychar)]) == NULL) yys = yyname[YYUNDFTOKEN];
            YYDBGOUT("%sdebug: state %d, error recovery discards token %d (%s)\n",
                    YYPREFIX, yystate, yychar, yys);
        }
#endif
        yychar = YYEMPTY;
        goto yyloop;
    }

yyreduce:
#if YYDEBUG
    if (yydebug)
        YYDBGOUT("%sdebug: state %d, reducing by rule %d (%s)\n",
                YYPREFIX, yystate, yyn, yyrule[yyn]);
#endif
    yym = yylen[yyn];
    if (yym > 0)
        yyval = yystack.l_mark[1-yym];
    else
        memset(&yyval, 0, sizeof yyval);

    switch (yyn)
    {
case 1:
#line 105 "awkgram.y"
	{ if (errorflag==0)
            winner = (Node *)stat3(PROGRAM, program, beginloc, yystack.l_mark[0].p, endloc);
          yyend (); }
break;
case 2:
#line 109 "awkgram.y"
	{ yyclearin; SYNTAX("bailing out"); }
break;
case 13:
#line 133 "awkgram.y"
	{inloop++;}
break;
case 14:
#line 134 "awkgram.y"
	{ --inloop; yyval.p = stat4(FOR, forstat, yystack.l_mark[-9].p, notnull(yystack.l_mark[-6].p), yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 15:
#line 135 "awkgram.y"
	{inloop++;}
break;
case 16:
#line 136 "awkgram.y"
	{ --inloop; yyval.p = stat4(FOR, forstat, yystack.l_mark[-7].p, NIL, yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 17:
#line 137 "awkgram.y"
	{inloop++;}
break;
case 18:
#line 138 "awkgram.y"
	{ --inloop; yyval.p = stat3(IN, instat, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), yystack.l_mark[0].p); }
break;
case 19:
#line 142 "awkgram.y"
	{ setfname(yystack.l_mark[0].cp); }
break;
case 20:
#line 143 "awkgram.y"
	{ setfname(yystack.l_mark[0].cp); }
break;
case 21:
#line 148 "awkgram.y"
	{ yyval.p = notnull(yystack.l_mark[-1].p); }
break;
case 26:
#line 160 "awkgram.y"
	{ yyval.i = 0; }
break;
case 28:
#line 165 "awkgram.y"
	{ yyval.i = 0; }
break;
case 30:
#line 171 "awkgram.y"
	{ yyval.p = 0; }
break;
case 32:
#line 177 "awkgram.y"
	{ yyval.p = 0; }
break;
case 33:
#line 179 "awkgram.y"
	{ yyval.p = yystack.l_mark[-1].p; }
break;
case 34:
#line 184 "awkgram.y"
	{ yyval.p = notnull(yystack.l_mark[0].p); }
break;
case 35:
#line 189 "awkgram.y"
	{ yyval.p = stat2(PASTAT, pastat, yystack.l_mark[0].p, stat2(PRINT, printstat, rectonode(), NIL)); }
break;
case 36:
#line 191 "awkgram.y"
	{ yyval.p = stat2(PASTAT, pastat, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 37:
#line 193 "awkgram.y"
	{ yyval.p = pa2stat(yystack.l_mark[-3].p, yystack.l_mark[0].p, stat2(PRINT, printstat, rectonode(), NIL)); }
break;
case 38:
#line 195 "awkgram.y"
	{ yyval.p = pa2stat(yystack.l_mark[-6].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 39:
#line 197 "awkgram.y"
	{ yyval.p = stat2(PASTAT, pastat, NIL, yystack.l_mark[-1].p); }
break;
case 40:
#line 199 "awkgram.y"
	{ beginloc = linkum(beginloc, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 41:
#line 201 "awkgram.y"
	{ endloc = linkum(endloc, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 42:
#line 202 "awkgram.y"
	{infunc++;}
break;
case 43:
#line 203 "awkgram.y"
	{ infunc--; curfname=0; defn((Cell *)yystack.l_mark[-7].p, yystack.l_mark[-5].p, yystack.l_mark[-1].p); yyval.p = 0; }
break;
case 45:
#line 209 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 47:
#line 215 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 48:
#line 220 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, assign, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 49:
#line 222 "awkgram.y"
	{ yyval.p = op3(CONDEXPR, condexpr, notnull(yystack.l_mark[-4].p), yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 50:
#line 224 "awkgram.y"
	{ yyval.p = op2(BOR, boolop, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 51:
#line 226 "awkgram.y"
	{ yyval.p = op2(AND, boolop, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 52:
#line 228 "awkgram.y"
	{ yyval.p = op3(yystack.l_mark[-1].i, matchop, NIL, yystack.l_mark[-2].p, (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 53:
#line 230 "awkgram.y"
	{ if (constnode(yystack.l_mark[0].p))
            yyval.p = op3(yystack.l_mark[-1].i, matchop, NIL, yystack.l_mark[-2].p, (Node*)makedfa(strnode(yystack.l_mark[0].p), 0));
          else
            yyval.p = op3(yystack.l_mark[-1].i, matchop, (Node *)1, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 54:
#line 235 "awkgram.y"
	{ yyval.p = op2(INTEST, intest, yystack.l_mark[-2].p, makearr(yystack.l_mark[0].p)); }
break;
case 55:
#line 237 "awkgram.y"
	{ yyval.p = op2(INTEST, intest, yystack.l_mark[-3].p, makearr(yystack.l_mark[0].p)); }
break;
case 56:
#line 239 "awkgram.y"
	{ yyval.p = op2(CAT, cat, yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 59:
#line 246 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, assign, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 60:
#line 248 "awkgram.y"
	{ yyval.p = op3(CONDEXPR, condexpr, notnull(yystack.l_mark[-4].p), yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 61:
#line 250 "awkgram.y"
	{ yyval.p = op2(BOR, boolop, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 62:
#line 252 "awkgram.y"
	{ yyval.p = op2(AND, boolop, notnull(yystack.l_mark[-2].p), notnull(yystack.l_mark[0].p)); }
break;
case 63:
#line 254 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 64:
#line 256 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 65:
#line 258 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 66:
#line 260 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 67:
#line 262 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 68:
#line 264 "awkgram.y"
	{ yyval.p = op2(yystack.l_mark[-1].i, relop, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 69:
#line 266 "awkgram.y"
	{ yyval.p = op3(yystack.l_mark[-1].i, matchop, NIL, yystack.l_mark[-2].p, (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 70:
#line 268 "awkgram.y"
	{ if (constnode(yystack.l_mark[0].p))
            yyval.p = op3(yystack.l_mark[-1].i, matchop, NIL, yystack.l_mark[-2].p, (Node*)makedfa(strnode(yystack.l_mark[0].p), 0));
          else
            yyval.p = op3(yystack.l_mark[-1].i, matchop, (Node *)1, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 71:
#line 273 "awkgram.y"
	{ yyval.p = op2(INTEST, intest, yystack.l_mark[-2].p, makearr(yystack.l_mark[0].p)); }
break;
case 72:
#line 275 "awkgram.y"
	{ yyval.p = op2(INTEST, intest, yystack.l_mark[-3].p, makearr(yystack.l_mark[0].p)); }
break;
case 73:
#line 277 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, yystack.l_mark[0].p, itonp(yystack.l_mark[-2].i), yystack.l_mark[-3].p); }
break;
case 74:
#line 279 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, (Node*)0, itonp(yystack.l_mark[-1].i), yystack.l_mark[-2].p); }
break;
case 75:
#line 281 "awkgram.y"
	{ yyval.p = op2(CAT, cat, yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 78:
#line 288 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 79:
#line 290 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 81:
#line 296 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 82:
#line 300 "awkgram.y"
	{ yyval.p = rectonode(); }
break;
case 84:
#line 303 "awkgram.y"
	{ yyval.p = yystack.l_mark[-1].p; }
break;
case 93:
#line 320 "awkgram.y"
	{ yyval.p = op3(MATCH, matchop, NIL, rectonode(), (Node*)makedfa(yystack.l_mark[0].s, 0)); }
break;
case 94:
#line 322 "awkgram.y"
	{ yyval.p = op1(NOT, boolop, notnull(yystack.l_mark[0].p)); }
break;
case 95:
#line 326 "awkgram.y"
	{startreg();}
break;
case 96:
#line 327 "awkgram.y"
	{ yyval.s = yystack.l_mark[-1].s; }
break;
case 99:
#line 336 "awkgram.y"
	{ yyval.p = stat3(yystack.l_mark[-3].i, (yystack.l_mark[-3].i==PRINT)?printstat : awkprintf, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 100:
#line 338 "awkgram.y"
	{ yyval.p = stat3(yystack.l_mark[-3].i, (yystack.l_mark[-3].i==PRINT)?printstat : awkprintf, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 101:
#line 340 "awkgram.y"
	{ yyval.p = stat3(yystack.l_mark[-3].i, (yystack.l_mark[-3].i==PRINT)?printstat : awkprintf, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 102:
#line 342 "awkgram.y"
	{ yyval.p = stat3(yystack.l_mark[-1].i, (yystack.l_mark[-1].i==PRINT)?printstat : awkprintf, yystack.l_mark[0].p, NIL, NIL); }
break;
case 103:
#line 344 "awkgram.y"
	{ yyval.p = stat2(DELETE, awkdelete, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p); }
break;
case 104:
#line 346 "awkgram.y"
	{ yyval.p = stat2(DELETE, awkdelete, makearr(yystack.l_mark[0].p), 0); }
break;
case 105:
#line 348 "awkgram.y"
	{ yyval.p = exptostat(yystack.l_mark[0].p); }
break;
case 106:
#line 350 "awkgram.y"
	{ yyclearin; SYNTAX("illegal statement"); }
break;
case 109:
#line 360 "awkgram.y"
	{ if (!inloop)
            SYNTAX("break illegal outside of loops");
          yyval.p = stat1(BREAK, jump, NIL); }
break;
case 110:
#line 364 "awkgram.y"
	{  if (!inloop)
            SYNTAX("continue illegal outside of loops");
           yyval.p = stat1(CONTINUE, jump, NIL); }
break;
case 111:
#line 367 "awkgram.y"
	{inloop++;}
break;
case 112:
#line 367 "awkgram.y"
	{--inloop;}
break;
case 113:
#line 368 "awkgram.y"
	{ yyval.p = stat2(DO, dostat, yystack.l_mark[-6].p, notnull(yystack.l_mark[-2].p)); }
break;
case 114:
#line 370 "awkgram.y"
	{ yyval.p = stat1(EXIT, jump, yystack.l_mark[-1].p); }
break;
case 115:
#line 372 "awkgram.y"
	{ yyval.p = stat1(EXIT, jump, NIL); }
break;
case 117:
#line 375 "awkgram.y"
	{ yyval.p = stat3(IF, ifstat, yystack.l_mark[-3].p, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 118:
#line 377 "awkgram.y"
	{ yyval.p = stat3(IF, ifstat, yystack.l_mark[-1].p, yystack.l_mark[0].p, NIL); }
break;
case 119:
#line 379 "awkgram.y"
	{ yyval.p = yystack.l_mark[-1].p; }
break;
case 120:
#line 381 "awkgram.y"
	{ if (infunc)
            SYNTAX("next is illegal inside a function");
          yyval.p = stat1(NEXT, jump, NIL); }
break;
case 121:
#line 385 "awkgram.y"
	{ if (infunc)
            SYNTAX("nextfile is illegal inside a function");
          yyval.p = stat1(NEXTFILE, jump, NIL); }
break;
case 122:
#line 389 "awkgram.y"
	{ yyval.p = stat1(RETURN, jump, yystack.l_mark[-1].p); }
break;
case 123:
#line 391 "awkgram.y"
	{ yyval.p = stat1(RETURN, jump, NIL); }
break;
case 125:
#line 393 "awkgram.y"
	{inloop++;}
break;
case 126:
#line 394 "awkgram.y"
	{ --inloop; yyval.p = stat2(WHILE, whilestat, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 127:
#line 396 "awkgram.y"
	{ yyval.p = 0; }
break;
case 129:
#line 402 "awkgram.y"
	{ yyval.p = linkum(yystack.l_mark[-1].p, yystack.l_mark[0].p); }
break;
case 132:
#line 411 "awkgram.y"
	{ yyval.p = op2(DIVEQ, assign, yystack.l_mark[-3].p, yystack.l_mark[0].p); }
break;
case 133:
#line 413 "awkgram.y"
	{ yyval.p = op2(ADD, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 134:
#line 415 "awkgram.y"
	{ yyval.p = op2(MINUS, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 135:
#line 417 "awkgram.y"
	{ yyval.p = op2(MULT, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 136:
#line 419 "awkgram.y"
	{ yyval.p = op2(DIVIDE, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 137:
#line 421 "awkgram.y"
	{ yyval.p = op2(MOD, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 138:
#line 423 "awkgram.y"
	{ yyval.p = op2(POWER, arith, yystack.l_mark[-2].p, yystack.l_mark[0].p); }
break;
case 139:
#line 425 "awkgram.y"
	{ yyval.p = op1(UMINUS, arith, yystack.l_mark[0].p); }
break;
case 140:
#line 427 "awkgram.y"
	{ yyval.p = op1(UPLUS, arith, yystack.l_mark[0].p); }
break;
case 141:
#line 429 "awkgram.y"
	{ yyval.p = op1(NOT, boolop, notnull(yystack.l_mark[0].p)); }
break;
case 142:
#line 431 "awkgram.y"
	{ yyval.p = op2(BLTIN, bltin, itonp(yystack.l_mark[-2].i), rectonode()); }
break;
case 143:
#line 433 "awkgram.y"
	{ yyval.p = op2(BLTIN, bltin, itonp(yystack.l_mark[-3].i), yystack.l_mark[-1].p); }
break;
case 144:
#line 435 "awkgram.y"
	{ yyval.p = op2(BLTIN, bltin, itonp(yystack.l_mark[0].i), rectonode()); }
break;
case 145:
#line 437 "awkgram.y"
	{ yyval.p = op2(CALL, call, celltonode(yystack.l_mark[-2].cp,CVAR), NIL); }
break;
case 146:
#line 439 "awkgram.y"
	{ yyval.p = op2(CALL, call, celltonode(yystack.l_mark[-3].cp,CVAR), yystack.l_mark[-1].p); }
break;
case 147:
#line 441 "awkgram.y"
	{ yyval.p = op1(CLOSE, closefile, yystack.l_mark[0].p); }
break;
case 148:
#line 443 "awkgram.y"
	{ yyval.p = op1(PREDECR, incrdecr, yystack.l_mark[0].p); }
break;
case 149:
#line 445 "awkgram.y"
	{ yyval.p = op1(PREINCR, incrdecr, yystack.l_mark[0].p); }
break;
case 150:
#line 447 "awkgram.y"
	{ yyval.p = op1(POSTDECR, incrdecr, yystack.l_mark[-1].p); }
break;
case 151:
#line 449 "awkgram.y"
	{ yyval.p = op1(POSTINCR, incrdecr, yystack.l_mark[-1].p); }
break;
case 152:
#line 451 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, yystack.l_mark[-2].p, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 153:
#line 453 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, NIL, itonp(yystack.l_mark[-1].i), yystack.l_mark[0].p); }
break;
case 154:
#line 455 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, yystack.l_mark[0].p, NIL, NIL); }
break;
case 155:
#line 457 "awkgram.y"
	{ yyval.p = op3(GETLINE, awkgetline, NIL, NIL, NIL); }
break;
case 156:
#line 459 "awkgram.y"
	{ yyval.p = op2(INDEX, sindex, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 157:
#line 461 "awkgram.y"
	{ SYNTAX("index() doesn't permit regular expressions");
          yyval.p = op2(INDEX, sindex, yystack.l_mark[-3].p, (Node*)yystack.l_mark[-1].s); }
break;
case 158:
#line 464 "awkgram.y"
	{ yyval.p = yystack.l_mark[-1].p; }
break;
case 159:
#line 466 "awkgram.y"
	{ yyval.p = op3(MATCHFCN, matchop, NIL, yystack.l_mark[-3].p, (Node*)makedfa(yystack.l_mark[-1].s, 1)); }
break;
case 160:
#line 468 "awkgram.y"
	{ if (constnode(yystack.l_mark[-1].p))
            yyval.p = op3(MATCHFCN, matchop, NIL, yystack.l_mark[-3].p, (Node*)makedfa(strnode(yystack.l_mark[-1].p), 1));
          else
            yyval.p = op3(MATCHFCN, matchop, (Node *)1, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 161:
#line 473 "awkgram.y"
	{ yyval.p = celltonode(yystack.l_mark[0].cp, CCON); }
break;
case 162:
#line 475 "awkgram.y"
	{ yyval.p = op4(SPLIT, split, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p, (Node*)STRING); }
break;
case 163:
#line 477 "awkgram.y"
	{ yyval.p = op4(SPLIT, split, yystack.l_mark[-5].p, makearr(yystack.l_mark[-3].p), (Node*)makedfa(yystack.l_mark[-1].s, 1), (Node *)REGEXPR); }
break;
case 164:
#line 479 "awkgram.y"
	{ yyval.p = op4(SPLIT, split, yystack.l_mark[-3].p, makearr(yystack.l_mark[-1].p), NIL, (Node*)STRING); }
break;
case 165:
#line 481 "awkgram.y"
	{ yyval.p = op1(yystack.l_mark[-3].i, awksprintf, yystack.l_mark[-1].p); }
break;
case 166:
#line 483 "awkgram.y"
	{ yyval.p = celltonode(yystack.l_mark[0].cp, CCON); }
break;
case 167:
#line 485 "awkgram.y"
	{ yyval.p = op4(yystack.l_mark[-5].i, (yystack.l_mark[-5].i==SUB)?sub:gsub, NIL, (Node*)makedfa(yystack.l_mark[-3].s, 1), yystack.l_mark[-1].p, rectonode()); }
break;
case 168:
#line 487 "awkgram.y"
	{ if (constnode(yystack.l_mark[-3].p))
            yyval.p = op4(yystack.l_mark[-5].i, (yystack.l_mark[-5].i==SUB)?sub:gsub, NIL, (Node*)makedfa(strnode(yystack.l_mark[-3].p), 1), yystack.l_mark[-1].p, rectonode());
          else
            yyval.p = op4(yystack.l_mark[-5].i, (yystack.l_mark[-5].i==SUB)?sub:gsub, (Node *)1, yystack.l_mark[-3].p, yystack.l_mark[-1].p, rectonode()); }
break;
case 169:
#line 492 "awkgram.y"
	{ yyval.p = op4(yystack.l_mark[-7].i, (yystack.l_mark[-7].i==SUB)?sub:gsub, NIL, (Node*)makedfa(yystack.l_mark[-5].s, 1), yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 170:
#line 494 "awkgram.y"
	{ if (constnode(yystack.l_mark[-5].p))
            yyval.p = op4(yystack.l_mark[-7].i, (yystack.l_mark[-7].i==SUB)?sub:gsub, NIL, (Node*)makedfa(strnode(yystack.l_mark[-5].p), 1), yystack.l_mark[-3].p, yystack.l_mark[-1].p);
          else
            yyval.p = op4(yystack.l_mark[-7].i, (yystack.l_mark[-7].i==SUB)?sub:gsub, (Node *)1, yystack.l_mark[-5].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 171:
#line 499 "awkgram.y"
	{ yyval.p = op3(SUBSTR, substr, yystack.l_mark[-5].p, yystack.l_mark[-3].p, yystack.l_mark[-1].p); }
break;
case 172:
#line 501 "awkgram.y"
	{ yyval.p = op3(SUBSTR, substr, yystack.l_mark[-3].p, yystack.l_mark[-1].p, NIL); }
break;
case 175:
#line 508 "awkgram.y"
	{ yyval.p = op2(ARRAY, array, makearr(yystack.l_mark[-3].p), yystack.l_mark[-1].p); }
break;
case 176:
#line 510 "awkgram.y"
	{ yyval.p = op1(INDIRECT, indirect, celltonode(yystack.l_mark[0].cp, CVAR)); }
break;
case 177:
#line 512 "awkgram.y"
	{ yyval.p = op1(INDIRECT, indirect, yystack.l_mark[0].p); }
break;
case 178:
#line 516 "awkgram.y"
	{ arglist = yyval.p = 0; }
break;
case 179:
#line 518 "awkgram.y"
	{ arglist = yyval.p = celltonode(yystack.l_mark[0].cp,CVAR); }
break;
case 180:
#line 520 "awkgram.y"
	{ checkdup(yystack.l_mark[-2].p, yystack.l_mark[0].cp);
          arglist = yyval.p = linkum(yystack.l_mark[-2].p,celltonode(yystack.l_mark[0].cp,CVAR)); }
break;
case 181:
#line 526 "awkgram.y"
	{ yyval.p = celltonode(yystack.l_mark[0].cp, CVAR); }
break;
case 182:
#line 528 "awkgram.y"
	{ yyval.p = op1(ARG, arg, itonp(yystack.l_mark[0].i)); }
break;
case 183:
#line 530 "awkgram.y"
	{ yyval.p = op1(VARNF, getnf, celltonode(yystack.l_mark[0].cp, CVAR)); }
break;
case 184:
#line 536 "awkgram.y"
	{ yyval.p = notnull(yystack.l_mark[-1].p); }
break;
#line 3386 "ytab.cpp"
    }
    yystack.s_mark -= yym;
    yystate = *yystack.s_mark;
    yystack.l_mark -= yym;
    yym = yylhs[yyn];
    if (yystate == 0 && yym == 0)
    {
#if YYDEBUG
        if (yydebug)
            YYDBGOUT("%sdebug: after reduction, shifting from state 0 to\
 state %d\n", YYPREFIX, YYFINAL);
#endif
        yystate = YYFINAL;
        *++yystack.s_mark = YYFINAL;
        *++yystack.l_mark = yyval;
        if (yychar < 0)
        {
            yychar = YYLEX;
            if (yychar < 0) yychar = YYEOF;
#if YYDEBUG
            if (yydebug)
            {
                if ((yys = yyname[YYTRANSLATE(yychar)]) == NULL) yys = yyname[YYUNDFTOKEN];
                YYDBGOUT("%sdebug: state %d, reading %d (%s)\n",
                        YYPREFIX, YYFINAL, yychar, yys);
            }
#endif
        }
        if (yychar == YYEOF) goto yyaccept;
        goto yyloop;
    }
    if (((yyn = yygindex[yym]) != 0) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == (YYINT) yystate)
        yystate = yytable[yyn];
    else
        yystate = yydgoto[yym];
#if YYDEBUG
    if (yydebug)
        YYDBGOUT("%sdebug: after reduction, shifting from state %d \
to state %d\n", YYPREFIX, *yystack.s_mark, yystate);
#endif
    if (yystack.s_mark >= yystack.s_last && yygrowstack(&yystack) == YYENOMEM) goto yyoverflow;
    *++yystack.s_mark = (YYINT) yystate;
    *++yystack.l_mark = yyval;
    goto yyloop;

yyoverflow:
    YYERROR_CALL("yacc stack overflow");

yyabort:
    yyfreestack(&yystack);
    return (1);

yyaccept:
    yyfreestack(&yystack);
    return (0);
}
